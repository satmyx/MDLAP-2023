1714068334
waR3U4bTeM%3Ae1e7b6fda2139af874103edb1cef27d1-1f844cd122af540c8773451cf47b3dd2
s:14164:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"1f844cd122af540c8773451cf47b3dd2";s:39:" phpDocumentor\Reflection\Php\File name";s:28:"fix-assets-manifest-file.php";s:39:" phpDocumentor\Reflection\Php\File path";s:79:"vendor/easycorp/easyadmin-bundle/src/Resources/bin/fix-assets-manifest-file.php";s:41:" phpDocumentor\Reflection\Php\File source";s:5006:"#!/usr/bin/env php
<?php

$manifestJsonPath = __DIR__.'/../public/manifest.json';
if (!file_exists($manifestJsonPath)) {
    return 0;
}

fixManifestJsonRtlEntries($manifestJsonPath);
fixManifestJsonEntriesPaths($manifestJsonPath);
fixFontPathsInCssFiles($manifestJsonPath);

// Webpack Encore doesn't support RTL variants of assets
// See https://github.com/symfony/webpack-encore/issues/1109
//
// If the asset defines an RTL entry, the manifest.json file wrongly points only to it:
//   'app.css' => '/bundles/easyadmin/app.1e1ba55d.rtl.css'
//
// We need to add both RTL and non-RTL variants for the asset:
//   'app.css' => '/bundles/easyadmin/app.1e1ba55d.css'
//   'app.rtl.css' => '/bundles/easyadmin/app.1e1ba55d.rtl.css'
//
// This function fixes the 'manifest.json' contents generated by Webpack Encore
// when assets contain RTL variants.
function fixManifestJsonRtlEntries(string $manifestJsonPath)
{
    $manifestJsonContents = json_decode(file_get_contents($manifestJsonPath), associative: true, flags: \JSON_THROW_ON_ERROR);
    $fixedManifestJsonContents = [];
    foreach ($manifestJsonContents as $assetName => $assetPath) {
        // only the assets that include '.rtl.' extensions in their paths are wrong; ignore the rest
        if (!str_contains($assetPath, '.rtl.')) {
            $fixedManifestJsonContents[$assetName] = $assetPath;

            continue;
        }

        // this happens when running the command several times on the same manifest.json file
        if (str_contains($assetName, '.rtl.')) {
            $fixedManifestJsonContents[$assetName] = $assetPath;

            continue;
        }

        $nonRtlAssetName = $assetName;
        $nonRtlAssetPath = str_replace('.rtl.', '.', $assetPath);
        $rtlAssetName = str_replace(['.css', '.js'], ['.rtl.css', '.rtl.js'], $assetName);
        $rtlAssetPath = $assetPath;

        $fixedManifestJsonContents[$nonRtlAssetName] = $nonRtlAssetPath;
        $fixedManifestJsonContents[$rtlAssetName] = $rtlAssetPath;
    }

    $newJsonManifestContents = json_encode($fixedManifestJsonContents, flags: \JSON_PRETTY_PRINT | \JSON_UNESCAPED_SLASHES);
    // the original manifest.json file uses a 2 white space indentation, so keep that
    $newJsonManifestContents = str_replace('    ', '  ', $newJsonManifestContents);
    file_put_contents($manifestJsonPath, $newJsonManifestContents);
}

// We use a named Symfony Asset package (see src/Asset/AssetPackage) to manage
// the versioned assets of this project. In order to allow using EasyAdmin in
// applications served in subdirectories (e.g. example.com/foo/admin) we use a
// PathPackage to generate the right URLs for assets.
// This means that asset paths in 'manifest.json' should not contain any path:
//   'app.css' => 'app.1e1ba55d.css'
//
// Sadly, even is setPublicPath() in our webpack.config.js is empty, the generated
// 'manifest.json' adds leading slashes in all paths, which breaks PathPackage:
//   'app.css' => '/app.1e1ba55d.css'
//
// This function removes that leading slash from all asset paths.
function fixManifestJsonEntriesPaths(string $manifestJsonPath)
{
    $manifestJsonContents = json_decode(file_get_contents($manifestJsonPath), associative: true, flags: \JSON_THROW_ON_ERROR);
    $fixedManifestJsonContents = [];
    foreach ($manifestJsonContents as $assetName => $assetPath) {
        $assetPath = ltrim($assetPath, '/');
        $fixedManifestJsonContents[$assetName] = $assetPath;
    }

    $newJsonManifestContents = json_encode($fixedManifestJsonContents, flags: \JSON_PRETTY_PRINT | \JSON_UNESCAPED_SLASHES);
    // the original manifest.json file uses a 2 white space indentation, so keep that
    $newJsonManifestContents = str_replace('    ', '  ', $newJsonManifestContents);
    file_put_contents($manifestJsonPath, $newJsonManifestContents);
}

// In the generated CSS files, there are styles like this:
// @font-face{font-family:FontAwesome;src:url(bundles/easyadmin/fonts/fa-v4compatibility.afac8956.woff2) format("woff2")
// This doesn't work when serving the Symfony application in a subdirectory.
// We need something like this instead:
// @font-face{font-family:FontAwesome;src:url(fonts/fa-v4compatibility.afac8956.woff2) format("woff2")
// There might be some way of doing this in Webpack Encore, but I can't find it, so let's be pragmatic.
function fixFontPathsInCssFiles(string $manifestJsonPath)
{
    $manifestJsonContents = json_decode(file_get_contents($manifestJsonPath), associative: true, flags: \JSON_THROW_ON_ERROR);
    foreach ($manifestJsonContents as $assetName => $assetPath) {
        if (!str_ends_with($assetPath, '.css')) {
            continue;
        }

        $assetFilePath = __DIR__.'/../public/'.str_replace('bundles/easyadmin/', '', $assetPath);
        $originalFileContents = file_get_contents($assetFilePath);
        $fixedFileContents = str_replace('url(/fonts/', 'url(fonts/', $originalFileContents);

        file_put_contents($assetFilePath, $fixedFileContents);
    }
}
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:3:{s:28:"\fixManifestJsonRtlEntries()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:28:"\fixManifestJsonRtlEntries()";s:36:" phpDocumentor\Reflection\Fqsen name";s:25:"fixManifestJsonRtlEntries";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:16:"manifestJsonPath";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:25;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:57;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}s:30:"\fixManifestJsonEntriesPaths()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:30:"\fixManifestJsonEntriesPaths()";s:36:" phpDocumentor\Reflection\Fqsen name";s:27:"fixManifestJsonEntriesPaths";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:16:"manifestJsonPath";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:71;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:84;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}s:25:"\fixFontPathsInCssFiles()";O:38:"phpDocumentor\Reflection\Php\Function_":8:{s:45:" phpDocumentor\Reflection\Php\Function_ fqsen";O:30:"phpDocumentor\Reflection\Fqsen":2:{s:37:" phpDocumentor\Reflection\Fqsen fqsen";s:25:"\fixFontPathsInCssFiles()";s:36:" phpDocumentor\Reflection\Fqsen name";s:22:"fixFontPathsInCssFiles";}s:49:" phpDocumentor\Reflection\Php\Function_ arguments";a:1:{i:0;O:37:"phpDocumentor\Reflection\Php\Argument":5:{s:43:" phpDocumentor\Reflection\Php\Argument name";s:16:"manifestJsonPath";s:43:" phpDocumentor\Reflection\Php\Argument type";O:38:"phpDocumentor\Reflection\Types\String_":0:{}s:46:" phpDocumentor\Reflection\Php\Argument default";N;s:50:" phpDocumentor\Reflection\Php\Argument byReference";b:0;s:49:" phpDocumentor\Reflection\Php\Argument isVariadic";b:0;}}s:48:" phpDocumentor\Reflection\Php\Function_ docBlock";N;s:48:" phpDocumentor\Reflection\Php\Function_ location";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:92;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:51:" phpDocumentor\Reflection\Php\Function_ endLocation";O:33:"phpDocumentor\Reflection\Location":2:{s:45:" phpDocumentor\Reflection\Location lineNumber";i:106;s:47:" phpDocumentor\Reflection\Location columnNumber";i:0;}s:50:" phpDocumentor\Reflection\Php\Function_ returnType";O:37:"phpDocumentor\Reflection\Types\Mixed_":0:{}s:60:" phpDocumentor\Reflection\Php\Function_ hasReturnByReference";b:0;s:48:" phpDocumentor\Reflection\Php\Function_ metadata";a:0:{}}}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";