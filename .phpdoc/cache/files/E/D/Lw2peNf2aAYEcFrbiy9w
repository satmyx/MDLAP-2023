1714068358
waR3U4bTeM%3A30dd638f503a9275c51aa0cf4fa66636-8b09c005d363fb94123d3aaa97220ad8
s:7764:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjhiMDljMDA1ZDM2M2ZiOTQxMjNkM2FhYTk3MjIwYWQ4IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MzA6IlJlZ2lzdHJhdGlvbkNvbnRyb2xsZXIudHBsLnBocCI7czozOToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBwYXRoIjtzOjk0OiJ2ZW5kb3Ivc3ltZm9ueS9tYWtlci1idW5kbGUvc3JjL1Jlc291cmNlcy9za2VsZXRvbi9yZWdpc3RyYXRpb24vUmVnaXN0cmF0aW9uQ29udHJvbGxlci50cGwucGhwIjtzOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHNvdXJjZSI7czo0ODMwOiI8Pz0gIjw/cGhwXG4iID8+CgpuYW1lc3BhY2UgPD89ICRuYW1lc3BhY2U7ID8+OwoKPD89ICR1c2Vfc3RhdGVtZW50czsgPz4KCmNsYXNzIDw/PSAkY2xhc3NfbmFtZTsgPz4gZXh0ZW5kcyBBYnN0cmFjdENvbnRyb2xsZXIKewo8P3BocCBpZiAoJHdpbGxfdmVyaWZ5X2VtYWlsKTogPz4KICAgIHByaXZhdGUgPD89ICRnZW5lcmF0b3ItPmdldFByb3BlcnR5VHlwZSgkZW1haWxfdmVyaWZpZXJfY2xhc3NfZGV0YWlscykgPz4kZW1haWxWZXJpZmllcjsKCiAgICBwdWJsaWMgZnVuY3Rpb24gX19jb25zdHJ1Y3QoPD89ICRlbWFpbF92ZXJpZmllcl9jbGFzc19kZXRhaWxzLT5nZXRTaG9ydE5hbWUoKSA/PiAkZW1haWxWZXJpZmllcikKICAgIHsKICAgICAgICAkdGhpcy0+ZW1haWxWZXJpZmllciA9ICRlbWFpbFZlcmlmaWVyOwogICAgfQoKPD9waHAgZW5kaWY7ID8+Cjw/PSAkZ2VuZXJhdG9yLT5nZW5lcmF0ZVJvdXRlRm9yQ29udHJvbGxlck1ldGhvZCgkcm91dGVfcGF0aCwgJHJvdXRlX25hbWUpID8+CiAgICBwdWJsaWMgZnVuY3Rpb24gcmVnaXN0ZXIoUmVxdWVzdCAkcmVxdWVzdCwgPD89ICRwYXNzd29yZF9oYXNoZXJfY2xhc3NfZGV0YWlscy0+Z2V0U2hvcnROYW1lKCkgPz4gPD89ICRwYXNzd29yZF9oYXNoZXJfdmFyaWFibGVfbmFtZSA/Pjw/PSAkYXV0aGVudGljYXRvcl9mdWxsX2NsYXNzX25hbWUgPyBzcHJpbnRmKCcsICVzICVzLCAlcyAkYXV0aGVudGljYXRvcicsICgkdXNlX25ld19hdXRoZW50aWNhdG9yX3N5c3RlbSA/ICdVc2VyQXV0aGVudGljYXRvckludGVyZmFjZScgOiAnR3VhcmRBdXRoZW50aWNhdG9ySGFuZGxlcicpLCAoJHVzZV9uZXdfYXV0aGVudGljYXRvcl9zeXN0ZW0gPyAnJHVzZXJBdXRoZW50aWNhdG9yJyA6ICckZ3VhcmRIYW5kbGVyJyksICRhdXRoZW50aWNhdG9yX2NsYXNzX25hbWUpIDogJycgPz4sIEVudGl0eU1hbmFnZXJJbnRlcmZhY2UgJGVudGl0eU1hbmFnZXIpOiBSZXNwb25zZQogICAgewogICAgICAgICR1c2VyID0gbmV3IDw/PSAkdXNlcl9jbGFzc19uYW1lID8+KCk7CiAgICAgICAgJGZvcm0gPSAkdGhpcy0+Y3JlYXRlRm9ybSg8Pz0gJGZvcm1fY2xhc3NfbmFtZSA/Pjo6Y2xhc3MsICR1c2VyKTsKICAgICAgICAkZm9ybS0+aGFuZGxlUmVxdWVzdCgkcmVxdWVzdCk7CgogICAgICAgIGlmICgkZm9ybS0+aXNTdWJtaXR0ZWQoKSAmJiAkZm9ybS0+aXNWYWxpZCgpKSB7CiAgICAgICAgICAgIC8vIGVuY29kZSB0aGUgcGxhaW4gcGFzc3dvcmQKICAgICAgICAgICAgJHVzZXItPnNldDw/PSB1Y2ZpcnN0KCRwYXNzd29yZF9maWVsZCkgPz4oCiAgICAgICAgICAgICAgICA8Pz0gJHBhc3N3b3JkX2hhc2hlcl92YXJpYWJsZV9uYW1lID8+LT48Pz0gJHVzZV9wYXNzd29yZF9oYXNoZXIgPyAnaGFzaFBhc3N3b3JkJyA6ICdlbmNvZGVQYXNzd29yZCcgPz4oCiAgICAgICAgICAgICAgICAgICAgJHVzZXIsCiAgICAgICAgICAgICAgICAgICAgJGZvcm0tPmdldCgncGxhaW5QYXNzd29yZCcpLT5nZXREYXRhKCkKICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgKTsKCiAgICAgICAgICAgICRlbnRpdHlNYW5hZ2VyLT5wZXJzaXN0KCR1c2VyKTsKICAgICAgICAgICAgJGVudGl0eU1hbmFnZXItPmZsdXNoKCk7Cjw/cGhwIGlmICgkd2lsbF92ZXJpZnlfZW1haWwpOiA/PgoKICAgICAgICAgICAgLy8gZ2VuZXJhdGUgYSBzaWduZWQgdXJsIGFuZCBlbWFpbCBpdCB0byB0aGUgdXNlcgogICAgICAgICAgICAkdGhpcy0+ZW1haWxWZXJpZmllci0+c2VuZEVtYWlsQ29uZmlybWF0aW9uKCdhcHBfdmVyaWZ5X2VtYWlsJywgJHVzZXIsCiAgICAgICAgICAgICAgICAobmV3IFRlbXBsYXRlZEVtYWlsKCkpCiAgICAgICAgICAgICAgICAgICAgLT5mcm9tKG5ldyBBZGRyZXNzKCc8Pz0gJGZyb21fZW1haWwgPz4nLCAnPD89ICRmcm9tX2VtYWlsX25hbWUgPz4nKSkKICAgICAgICAgICAgICAgICAgICAtPnRvKCR1c2VyLT48Pz0gJGVtYWlsX2dldHRlciA/PigpKQogICAgICAgICAgICAgICAgICAgIC0+c3ViamVjdCgnUGxlYXNlIENvbmZpcm0geW91ciBFbWFpbCcpCiAgICAgICAgICAgICAgICAgICAgLT5odG1sVGVtcGxhdGUoJ3JlZ2lzdHJhdGlvbi9jb25maXJtYXRpb25fZW1haWwuaHRtbC50d2lnJykKICAgICAgICAgICAgKTsKPD9waHAgZW5kaWY7ID8+CiAgICAgICAgICAgIC8vIGRvIGFueXRoaW5nIGVsc2UgeW91IG5lZWQgaGVyZSwgbGlrZSBzZW5kIGFuIGVtYWlsCgo8P3BocCBpZiAoJGF1dGhlbnRpY2F0b3JfZnVsbF9jbGFzc19uYW1lKTogPz4KPD9waHAgaWYgKCR1c2VfbmV3X2F1dGhlbnRpY2F0b3Jfc3lzdGVtKTogPz4KICAgICAgICAgICAgcmV0dXJuICR1c2VyQXV0aGVudGljYXRvci0+YXV0aGVudGljYXRlVXNlcigKICAgICAgICAgICAgICAgICR1c2VyLAogICAgICAgICAgICAgICAgJGF1dGhlbnRpY2F0b3IsCiAgICAgICAgICAgICAgICAkcmVxdWVzdAogICAgICAgICAgICApOwo8P3BocCBlbHNlOiA/PgogICAgICAgICAgICByZXR1cm4gJGd1YXJkSGFuZGxlci0+YXV0aGVudGljYXRlVXNlckFuZEhhbmRsZVN1Y2Nlc3MoCiAgICAgICAgICAgICAgICAkdXNlciwKICAgICAgICAgICAgICAgICRyZXF1ZXN0LAogICAgICAgICAgICAgICAgJGF1dGhlbnRpY2F0b3IsCiAgICAgICAgICAgICAgICAnPD89ICRmaXJld2FsbF9uYW1lOyA/PicgLy8gZmlyZXdhbGwgbmFtZSBpbiBzZWN1cml0eS55YW1sCiAgICAgICAgICAgICk7Cjw/cGhwIGVuZGlmOyA/Pgo8P3BocCBlbHNlOiA/PgogICAgICAgICAgICByZXR1cm4gJHRoaXMtPnJlZGlyZWN0VG9Sb3V0ZSgnPD89ICRyZWRpcmVjdF9yb3V0ZV9uYW1lID8+Jyk7Cjw/cGhwIGVuZGlmOyA/PgogICAgICAgIH0KCiAgICAgICAgcmV0dXJuICR0aGlzLT5yZW5kZXIoJ3JlZ2lzdHJhdGlvbi9yZWdpc3Rlci5odG1sLnR3aWcnLCBbCiAgICAgICAgICAgICdyZWdpc3RyYXRpb25Gb3JtJyA9PiAkZm9ybS0+Y3JlYXRlVmlldygpLAogICAgICAgIF0pOwogICAgfQo8P3BocCBpZiAoJHdpbGxfdmVyaWZ5X2VtYWlsKTogPz4KCjw/PSAkZ2VuZXJhdG9yLT5nZW5lcmF0ZVJvdXRlRm9yQ29udHJvbGxlck1ldGhvZCgnL3ZlcmlmeS9lbWFpbCcsICdhcHBfdmVyaWZ5X2VtYWlsJykgPz4KICAgIHB1YmxpYyBmdW5jdGlvbiB2ZXJpZnlVc2VyRW1haWwoUmVxdWVzdCAkcmVxdWVzdDw/cGhwIGlmICgkdHJhbnNsYXRvcl9hdmFpbGFibGUpOiA/PiwgVHJhbnNsYXRvckludGVyZmFjZSAkdHJhbnNsYXRvcjw/cGhwIGVuZGlmID8+PD89ICR2ZXJpZnlfZW1haWxfYW5vbnltb3VzbHkgPyBzcHJpbnRmKCcsICVzICVzJywgJHJlcG9zaXRvcnlfY2xhc3NfbmFtZSwgJHJlcG9zaXRvcnlfdmFyKSA6IG51bGwgPz4pOiBSZXNwb25zZQogICAgewo8P3BocCBpZiAoISR2ZXJpZnlfZW1haWxfYW5vbnltb3VzbHkpOiA/PgogICAgICAgICR0aGlzLT5kZW55QWNjZXNzVW5sZXNzR3JhbnRlZCgnSVNfQVVUSEVOVElDQVRFRF9GVUxMWScpOwo8P3BocCBlbHNlOiA/PgogICAgICAgICRpZCA9ICRyZXF1ZXN0LT5nZXQoJ2lkJyk7CgogICAgICAgIGlmIChudWxsID09PSAkaWQpIHsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5yZWRpcmVjdFRvUm91dGUoJ2FwcF9yZWdpc3RlcicpOwogICAgICAgIH0KPD9waHAgaWYgKCckbWFuYWdlcicgPT09ICRyZXBvc2l0b3J5X3Zhcik6ID8+CgogICAgICAgICRyZXBvc2l0b3J5ID0gJG1hbmFnZXItPmdldFJlcG9zaXRvcnkoPD89ICR1c2VyX2NsYXNzX25hbWUgPz46OmNsYXNzKTsKICAgICAgICAkdXNlciA9ICRyZXBvc2l0b3J5LT5maW5kKCRpZCk7Cjw/cGhwIGVsc2U6ID8+CgogICAgICAgICR1c2VyID0gPD89ICRyZXBvc2l0b3J5X3ZhcjsgPz4tPmZpbmQoJGlkKTsKPD9waHAgZW5kaWY7ID8+CgogICAgICAgIGlmIChudWxsID09PSAkdXNlcikgewogICAgICAgICAgICByZXR1cm4gJHRoaXMtPnJlZGlyZWN0VG9Sb3V0ZSgnYXBwX3JlZ2lzdGVyJyk7CiAgICAgICAgfQo8P3BocCBlbmRpZjsgPz4KCiAgICAgICAgLy8gdmFsaWRhdGUgZW1haWwgY29uZmlybWF0aW9uIGxpbmssIHNldHMgVXNlcjo6aXNWZXJpZmllZD10cnVlIGFuZCBwZXJzaXN0cwogICAgICAgIHRyeSB7CiAgICAgICAgICAgICR0aGlzLT5lbWFpbFZlcmlmaWVyLT5oYW5kbGVFbWFpbENvbmZpcm1hdGlvbigkcmVxdWVzdCwgPD89ICR2ZXJpZnlfZW1haWxfYW5vbnltb3VzbHkgPyAnJHVzZXInIDogJyR0aGlzLT5nZXRVc2VyKCknID8+KTsKICAgICAgICB9IGNhdGNoIChWZXJpZnlFbWFpbEV4Y2VwdGlvbkludGVyZmFjZSAkZXhjZXB0aW9uKSB7CiAgICAgICAgICAgICR0aGlzLT5hZGRGbGFzaCgndmVyaWZ5X2VtYWlsX2Vycm9yJywgPD9waHAgaWYgKCR0cmFuc2xhdG9yX2F2YWlsYWJsZSk6ID8+JHRyYW5zbGF0b3ItPnRyYW5zKCRleGNlcHRpb24tPmdldFJlYXNvbigpLCBbXSwgJ1ZlcmlmeUVtYWlsQnVuZGxlJyk8P3BocCBlbHNlOiA/PiRleGNlcHRpb24tPmdldFJlYXNvbigpPD9waHAgZW5kaWYgPz4pOwoKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5yZWRpcmVjdFRvUm91dGUoJzw/PSAkcm91dGVfbmFtZSA/PicpOwogICAgICAgIH0KCiAgICAgICAgLy8gQFRPRE8gQ2hhbmdlIHRoZSByZWRpcmVjdCBvbiBzdWNjZXNzIGFuZCBoYW5kbGUgb3IgcmVtb3ZlIHRoZSBmbGFzaCBtZXNzYWdlIGluIHlvdXIgdGVtcGxhdGVzCiAgICAgICAgJHRoaXMtPmFkZEZsYXNoKCdzdWNjZXNzJywgJ1lvdXIgZW1haWwgYWRkcmVzcyBoYXMgYmVlbiB2ZXJpZmllZC4nKTsKCiAgICAgICAgcmV0dXJuICR0aGlzLT5yZWRpcmVjdFRvUm91dGUoJ2FwcF9yZWdpc3RlcicpOwogICAgfQo8P3BocCBlbmRpZjsgPz4KfQoiO3M6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbmFtZXNwYWNlcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbmNsdWRlcyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBmdW5jdGlvbnMiO2E6MDp7fXM6NDQ6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY29uc3RhbnRzIjthOjA6e31zOjQyOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGNsYXNzZXMiO2E6MDp7fXM6NDU6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAaW50ZXJmYWNlcyI7YTowOnt9czo0MToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQB0cmFpdHMiO2E6MDp7fXM6NDA6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAZW51bXMiO2E6MDp7fXM6NDM6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAbWV0YWRhdGEiO2E6MDp7fX0=";