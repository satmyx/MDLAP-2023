1714068357
waR3U4bTeM%3A3100d0cf8f369ad60c52f10b407747f3-10a937532694a347c93dc4cfc3cd7342
s:36664:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"10a937532694a347c93dc4cfc3cd7342";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"tr.php";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/tr.php";s:41:" phpDocumentor\Reflection\Php\File source";s:26571:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'Greenwich Ortalama Saati (Abidjan)',
        'Africa/Accra' => 'Greenwich Ortalama Saati (Akra)',
        'Africa/Addis_Ababa' => 'Doğu Afrika Saati (Addis Ababa)',
        'Africa/Algiers' => 'Orta Avrupa Saati (Cezayir)',
        'Africa/Asmera' => 'Doğu Afrika Saati (Asmara)',
        'Africa/Bamako' => 'Greenwich Ortalama Saati (Bamako)',
        'Africa/Bangui' => 'Batı Afrika Saati (Bangui)',
        'Africa/Banjul' => 'Greenwich Ortalama Saati (Banjul)',
        'Africa/Bissau' => 'Greenwich Ortalama Saati (Bissau)',
        'Africa/Blantyre' => 'Orta Afrika Saati (Blantyre)',
        'Africa/Brazzaville' => 'Batı Afrika Saati (Brazzavil)',
        'Africa/Bujumbura' => 'Orta Afrika Saati (Bujumbura)',
        'Africa/Cairo' => 'Doğu Avrupa Saati (Kahire)',
        'Africa/Casablanca' => 'Batı Avrupa Saati (Kazablanka)',
        'Africa/Ceuta' => 'Orta Avrupa Saati (Septe)',
        'Africa/Conakry' => 'Greenwich Ortalama Saati (Konakri)',
        'Africa/Dakar' => 'Greenwich Ortalama Saati (Dakar)',
        'Africa/Dar_es_Salaam' => 'Doğu Afrika Saati (Darüsselam)',
        'Africa/Djibouti' => 'Doğu Afrika Saati (Cibuti)',
        'Africa/Douala' => 'Batı Afrika Saati (Douala)',
        'Africa/El_Aaiun' => 'Batı Avrupa Saati (Layun)',
        'Africa/Freetown' => 'Greenwich Ortalama Saati (Freetown)',
        'Africa/Gaborone' => 'Orta Afrika Saati (Gaborone)',
        'Africa/Harare' => 'Orta Afrika Saati (Harare)',
        'Africa/Johannesburg' => 'Güney Afrika Standart Saati (Johannesburg)',
        'Africa/Juba' => 'Orta Afrika Saati (Cuba)',
        'Africa/Kampala' => 'Doğu Afrika Saati (Kampala)',
        'Africa/Khartoum' => 'Orta Afrika Saati (Hartum)',
        'Africa/Kigali' => 'Orta Afrika Saati (Kigali)',
        'Africa/Kinshasa' => 'Batı Afrika Saati (Kinşasa)',
        'Africa/Lagos' => 'Batı Afrika Saati (Lagos)',
        'Africa/Libreville' => 'Batı Afrika Saati (Librevil)',
        'Africa/Lome' => 'Greenwich Ortalama Saati (Lome)',
        'Africa/Luanda' => 'Batı Afrika Saati (Luanda)',
        'Africa/Lubumbashi' => 'Orta Afrika Saati (Lubumbashi)',
        'Africa/Lusaka' => 'Orta Afrika Saati (Lusaka)',
        'Africa/Malabo' => 'Batı Afrika Saati (Malabo)',
        'Africa/Maputo' => 'Orta Afrika Saati (Maputo)',
        'Africa/Maseru' => 'Güney Afrika Standart Saati (Maseru)',
        'Africa/Mbabane' => 'Güney Afrika Standart Saati (Mbabane)',
        'Africa/Mogadishu' => 'Doğu Afrika Saati (Mogadişu)',
        'Africa/Monrovia' => 'Greenwich Ortalama Saati (Monrovia)',
        'Africa/Nairobi' => 'Doğu Afrika Saati (Nairobi)',
        'Africa/Ndjamena' => 'Batı Afrika Saati (Ndjamena)',
        'Africa/Niamey' => 'Batı Afrika Saati (Niamey)',
        'Africa/Nouakchott' => 'Greenwich Ortalama Saati (Nouakchott)',
        'Africa/Ouagadougou' => 'Greenwich Ortalama Saati (Ouagadougou)',
        'Africa/Porto-Novo' => 'Batı Afrika Saati (Porto-Novo)',
        'Africa/Sao_Tome' => 'Greenwich Ortalama Saati (Sao Tome)',
        'Africa/Tripoli' => 'Doğu Avrupa Saati (Trablus)',
        'Africa/Tunis' => 'Orta Avrupa Saati (Tunus)',
        'Africa/Windhoek' => 'Orta Afrika Saati (Windhoek)',
        'America/Adak' => 'Hawaii-Aleut Saati (Adak)',
        'America/Anchorage' => 'Alaska Saati (Anchorage)',
        'America/Anguilla' => 'Atlantik Saati (Anguilla)',
        'America/Antigua' => 'Atlantik Saati (Antigua)',
        'America/Araguaina' => 'Brasilia Saati (Araguaina)',
        'America/Argentina/La_Rioja' => 'Arjantin Saati (La Rioja)',
        'America/Argentina/Rio_Gallegos' => 'Arjantin Saati (Rio Gallegos)',
        'America/Argentina/Salta' => 'Arjantin Saati (Salta)',
        'America/Argentina/San_Juan' => 'Arjantin Saati (San Juan)',
        'America/Argentina/San_Luis' => 'Arjantin Saati (San Luis)',
        'America/Argentina/Tucuman' => 'Arjantin Saati (Tucuman)',
        'America/Argentina/Ushuaia' => 'Arjantin Saati (Ushuaia)',
        'America/Aruba' => 'Atlantik Saati (Aruba)',
        'America/Asuncion' => 'Paraguay Saati (Asunción)',
        'America/Bahia' => 'Brasilia Saati (Bahia)',
        'America/Bahia_Banderas' => 'Kuzey Amerika Merkezi Saati (Bahia Banderas)',
        'America/Barbados' => 'Atlantik Saati (Barbados)',
        'America/Belem' => 'Brasilia Saati (Belem)',
        'America/Belize' => 'Kuzey Amerika Merkezi Saati (Belize)',
        'America/Blanc-Sablon' => 'Atlantik Saati (Blanc-Sablon)',
        'America/Boa_Vista' => 'Amazon Saati (Boa Vista)',
        'America/Bogota' => 'Kolombiya Saati (Bogota)',
        'America/Boise' => 'Kuzey Amerika Dağ Saati (Boise)',
        'America/Buenos_Aires' => 'Arjantin Saati (Buenos Aires)',
        'America/Cambridge_Bay' => 'Kuzey Amerika Dağ Saati (Cambridge Bay)',
        'America/Campo_Grande' => 'Amazon Saati (Campo Grande)',
        'America/Cancun' => 'Kuzey Amerika Doğu Saati (Cancun)',
        'America/Caracas' => 'Venezuela Saati (Caracas)',
        'America/Catamarca' => 'Arjantin Saati (Catamarca)',
        'America/Cayenne' => 'Fransız Guyanası Saati (Cayenne)',
        'America/Cayman' => 'Kuzey Amerika Doğu Saati (Cayman)',
        'America/Chicago' => 'Kuzey Amerika Merkezi Saati (Chicago)',
        'America/Chihuahua' => 'Meksika Pasifik Kıyısı Saati (Chihuahua)',
        'America/Coral_Harbour' => 'Kuzey Amerika Doğu Saati (Atikokan)',
        'America/Cordoba' => 'Arjantin Saati (Cordoba)',
        'America/Costa_Rica' => 'Kuzey Amerika Merkezi Saati (Kosta Rika)',
        'America/Creston' => 'Kuzey Amerika Dağ Saati (Creston)',
        'America/Cuiaba' => 'Amazon Saati (Cuiaba)',
        'America/Curacao' => 'Atlantik Saati (Curaçao)',
        'America/Danmarkshavn' => 'Greenwich Ortalama Saati (Danmarkshavn)',
        'America/Dawson' => 'Yukon Saati (Dawson)',
        'America/Dawson_Creek' => 'Kuzey Amerika Dağ Saati (Dawson Creek)',
        'America/Denver' => 'Kuzey Amerika Dağ Saati (Denver)',
        'America/Detroit' => 'Kuzey Amerika Doğu Saati (Detroit)',
        'America/Dominica' => 'Atlantik Saati (Dominika)',
        'America/Edmonton' => 'Kuzey Amerika Dağ Saati (Edmonton)',
        'America/Eirunepe' => 'Acre Saati (Eirunepe)',
        'America/El_Salvador' => 'Kuzey Amerika Merkezi Saati (El Salvador)',
        'America/Fort_Nelson' => 'Kuzey Amerika Dağ Saati (Fort Nelson)',
        'America/Fortaleza' => 'Brasilia Saati (Fortaleza)',
        'America/Glace_Bay' => 'Atlantik Saati (Glace Bay)',
        'America/Godthab' => 'Batı Grönland Saati (Nuuk)',
        'America/Goose_Bay' => 'Atlantik Saati (Goose Bay)',
        'America/Grand_Turk' => 'Kuzey Amerika Doğu Saati (Grand Turk)',
        'America/Grenada' => 'Atlantik Saati (Grenada)',
        'America/Guadeloupe' => 'Atlantik Saati (Guadeloupe)',
        'America/Guatemala' => 'Kuzey Amerika Merkezi Saati (Guatemala)',
        'America/Guayaquil' => 'Ekvador Saati (Guayaquil)',
        'America/Guyana' => 'Guyana Saati',
        'America/Halifax' => 'Atlantik Saati (Halifax)',
        'America/Havana' => 'Küba Saati (Havana)',
        'America/Hermosillo' => 'Meksika Pasifik Kıyısı Saati (Hermosillo)',
        'America/Indiana/Knox' => 'Kuzey Amerika Merkezi Saati (Knox, Indiana)',
        'America/Indiana/Marengo' => 'Kuzey Amerika Doğu Saati (Marengo, Indiana)',
        'America/Indiana/Petersburg' => 'Kuzey Amerika Doğu Saati (Petersburg, Indiana)',
        'America/Indiana/Tell_City' => 'Kuzey Amerika Merkezi Saati (Tell City, Indiana)',
        'America/Indiana/Vevay' => 'Kuzey Amerika Doğu Saati (Vevay, Indiana)',
        'America/Indiana/Vincennes' => 'Kuzey Amerika Doğu Saati (Vincennes, Indiana)',
        'America/Indiana/Winamac' => 'Kuzey Amerika Doğu Saati (Winamac, Indiana)',
        'America/Indianapolis' => 'Kuzey Amerika Doğu Saati (Indianapolis)',
        'America/Inuvik' => 'Kuzey Amerika Dağ Saati (Inuvik)',
        'America/Iqaluit' => 'Kuzey Amerika Doğu Saati (Iqaluit)',
        'America/Jamaica' => 'Kuzey Amerika Doğu Saati (Jamaika)',
        'America/Jujuy' => 'Arjantin Saati (Jujuy)',
        'America/Juneau' => 'Alaska Saati (Juneau)',
        'America/Kentucky/Monticello' => 'Kuzey Amerika Doğu Saati (Monticello, Kentucky)',
        'America/Kralendijk' => 'Atlantik Saati (Kralendijk)',
        'America/La_Paz' => 'Bolivya Saati (La Paz)',
        'America/Lima' => 'Peru Saati (Lima)',
        'America/Los_Angeles' => 'Kuzey Amerika Pasifik Saati (Los Angeles)',
        'America/Louisville' => 'Kuzey Amerika Doğu Saati (Louisville)',
        'America/Lower_Princes' => 'Atlantik Saati (Lower Prince’s Quarter)',
        'America/Maceio' => 'Brasilia Saati (Maceio)',
        'America/Managua' => 'Kuzey Amerika Merkezi Saati (Managua)',
        'America/Manaus' => 'Amazon Saati (Manaus)',
        'America/Marigot' => 'Atlantik Saati (Marigot)',
        'America/Martinique' => 'Atlantik Saati (Martinique)',
        'America/Matamoros' => 'Kuzey Amerika Merkezi Saati (Matamoros)',
        'America/Mazatlan' => 'Meksika Pasifik Kıyısı Saati (Mazatlan)',
        'America/Mendoza' => 'Arjantin Saati (Mendoza)',
        'America/Menominee' => 'Kuzey Amerika Merkezi Saati (Menominee)',
        'America/Merida' => 'Kuzey Amerika Merkezi Saati (Merida)',
        'America/Metlakatla' => 'Alaska Saati (Metlakatla)',
        'America/Mexico_City' => 'Kuzey Amerika Merkezi Saati (Mexico City)',
        'America/Miquelon' => 'Saint Pierre ve Miquelon Saati',
        'America/Moncton' => 'Atlantik Saati (Moncton)',
        'America/Monterrey' => 'Kuzey Amerika Merkezi Saati (Monterrey)',
        'America/Montevideo' => 'Uruguay Saati (Montevideo)',
        'America/Montreal' => 'Kanada Saati (Montreal)',
        'America/Montserrat' => 'Atlantik Saati (Montserrat)',
        'America/Nassau' => 'Kuzey Amerika Doğu Saati (Nassau)',
        'America/New_York' => 'Kuzey Amerika Doğu Saati (New York)',
        'America/Nipigon' => 'Kuzey Amerika Doğu Saati (Nipigon)',
        'America/Nome' => 'Alaska Saati (Nome)',
        'America/Noronha' => 'Fernando de Noronha Saati',
        'America/North_Dakota/Beulah' => 'Kuzey Amerika Merkezi Saati (Beulah, Kuzey Dakota)',
        'America/North_Dakota/Center' => 'Kuzey Amerika Merkezi Saati (Merkez, Kuzey Dakota)',
        'America/North_Dakota/New_Salem' => 'Kuzey Amerika Merkezi Saati (New Salem, Kuzey Dakota)',
        'America/Ojinaga' => 'Kuzey Amerika Dağ Saati (Ojinaga)',
        'America/Panama' => 'Kuzey Amerika Doğu Saati (Panama)',
        'America/Pangnirtung' => 'Kuzey Amerika Doğu Saati (Pangnirtung)',
        'America/Paramaribo' => 'Surinam Saati (Paramaribo)',
        'America/Phoenix' => 'Kuzey Amerika Dağ Saati (Phoenix)',
        'America/Port-au-Prince' => 'Kuzey Amerika Doğu Saati (Port-au-Prince)',
        'America/Port_of_Spain' => 'Atlantik Saati (Port of Spain)',
        'America/Porto_Velho' => 'Amazon Saati (Porto Velho)',
        'America/Puerto_Rico' => 'Atlantik Saati (Porto Riko)',
        'America/Punta_Arenas' => 'Şili Saati (Punta Arenas)',
        'America/Rainy_River' => 'Kuzey Amerika Merkezi Saati (Rainy River)',
        'America/Rankin_Inlet' => 'Kuzey Amerika Merkezi Saati (Rankin Inlet)',
        'America/Recife' => 'Brasilia Saati (Recife)',
        'America/Regina' => 'Kuzey Amerika Merkezi Saati (Regina)',
        'America/Resolute' => 'Kuzey Amerika Merkezi Saati (Resolute)',
        'America/Rio_Branco' => 'Acre Saati (Rio Branco)',
        'America/Santa_Isabel' => 'Kuzeybatı Meksika Saati (Santa Isabel)',
        'America/Santarem' => 'Brasilia Saati (Santarem)',
        'America/Santiago' => 'Şili Saati (Santiago)',
        'America/Santo_Domingo' => 'Atlantik Saati (Santo Domingo)',
        'America/Sao_Paulo' => 'Brasilia Saati (Sao Paulo)',
        'America/Scoresbysund' => 'Doğu Grönland Saati (Ittoqqortoormiit)',
        'America/Sitka' => 'Alaska Saati (Sitka)',
        'America/St_Barthelemy' => 'Atlantik Saati (Saint Barthelemy)',
        'America/St_Johns' => 'Newfoundland Saati (St. John’s)',
        'America/St_Kitts' => 'Atlantik Saati (St. Kitts)',
        'America/St_Lucia' => 'Atlantik Saati (St. Lucia)',
        'America/St_Thomas' => 'Atlantik Saati (St. Thomas)',
        'America/St_Vincent' => 'Atlantik Saati (St. Vincent)',
        'America/Swift_Current' => 'Kuzey Amerika Merkezi Saati (Swift Current)',
        'America/Tegucigalpa' => 'Kuzey Amerika Merkezi Saati (Tegucigalpa)',
        'America/Thule' => 'Atlantik Saati (Thule)',
        'America/Thunder_Bay' => 'Kuzey Amerika Doğu Saati (Thunder Bay)',
        'America/Tijuana' => 'Kuzey Amerika Pasifik Saati (Tijuana)',
        'America/Toronto' => 'Kuzey Amerika Doğu Saati (Toronto)',
        'America/Tortola' => 'Atlantik Saati (Tortola)',
        'America/Vancouver' => 'Kuzey Amerika Pasifik Saati (Vancouver)',
        'America/Whitehorse' => 'Yukon Saati (Whitehorse)',
        'America/Winnipeg' => 'Kuzey Amerika Merkezi Saati (Winnipeg)',
        'America/Yakutat' => 'Alaska Saati (Yakutat)',
        'America/Yellowknife' => 'Kuzey Amerika Dağ Saati (Yellowknife)',
        'Antarctica/Casey' => 'Casey Saati',
        'Antarctica/Davis' => 'Davis Saati',
        'Antarctica/DumontDUrville' => 'Dumont-d’Urville Saati',
        'Antarctica/Macquarie' => 'Doğu Avustralya Saati (Macquarie)',
        'Antarctica/Mawson' => 'Mawson Saati',
        'Antarctica/McMurdo' => 'Yeni Zelanda Saati (McMurdo)',
        'Antarctica/Palmer' => 'Şili Saati (Palmer)',
        'Antarctica/Rothera' => 'Rothera Saati',
        'Antarctica/Syowa' => 'Showa Saati',
        'Antarctica/Troll' => 'Greenwich Ortalama Saati (Troll)',
        'Antarctica/Vostok' => 'Vostok Saati',
        'Arctic/Longyearbyen' => 'Orta Avrupa Saati (Longyearbyen)',
        'Asia/Aden' => 'Arabistan Saati (Aden)',
        'Asia/Almaty' => 'Doğu Kazakistan Saati (Almatı)',
        'Asia/Amman' => 'Doğu Avrupa Saati (Amman)',
        'Asia/Anadyr' => 'Anadyr Saati (Anadır)',
        'Asia/Aqtau' => 'Batı Kazakistan Saati (Aktav)',
        'Asia/Aqtobe' => 'Batı Kazakistan Saati (Aktöbe)',
        'Asia/Ashgabat' => 'Türkmenistan Saati (Aşkabat)',
        'Asia/Atyrau' => 'Batı Kazakistan Saati (Atırav)',
        'Asia/Baghdad' => 'Arabistan Saati (Bağdat)',
        'Asia/Bahrain' => 'Arabistan Saati (Bahreyn)',
        'Asia/Baku' => 'Azerbaycan Saati (Bakü)',
        'Asia/Bangkok' => 'Hindiçin Saati (Bangkok)',
        'Asia/Barnaul' => 'Rusya Saati (Barnaul)',
        'Asia/Beirut' => 'Doğu Avrupa Saati (Beyrut)',
        'Asia/Bishkek' => 'Kırgızistan Saati (Bişkek)',
        'Asia/Brunei' => 'Brunei Darü’s-Selam Saati',
        'Asia/Calcutta' => 'Hindistan Standart Saati (Kalküta)',
        'Asia/Chita' => 'Yakutsk Saati (Çita)',
        'Asia/Choibalsan' => 'Ulan Batur Saati (Çoybalsan)',
        'Asia/Colombo' => 'Hindistan Standart Saati (Kolombo)',
        'Asia/Damascus' => 'Doğu Avrupa Saati (Şam)',
        'Asia/Dhaka' => 'Bangladeş Saati (Dakka)',
        'Asia/Dili' => 'Doğu Timor Saati (Dili)',
        'Asia/Dubai' => 'Körfez Saati (Dubai)',
        'Asia/Dushanbe' => 'Tacikistan Saati (Duşanbe)',
        'Asia/Famagusta' => 'Doğu Avrupa Saati (Gazimağusa)',
        'Asia/Gaza' => 'Doğu Avrupa Saati (Gazze)',
        'Asia/Hebron' => 'Doğu Avrupa Saati (El Halil)',
        'Asia/Hong_Kong' => 'Hong Kong Saati',
        'Asia/Hovd' => 'Hovd Saati',
        'Asia/Irkutsk' => 'İrkutsk Saati',
        'Asia/Jakarta' => 'Batı Endonezya Saati (Cakarta)',
        'Asia/Jayapura' => 'Doğu Endonezya Saati (Jayapura)',
        'Asia/Jerusalem' => 'İsrail Saati (Kudüs)',
        'Asia/Kabul' => 'Afganistan Saati (Kabil)',
        'Asia/Kamchatka' => 'Petropavlovsk-Kamçatski Saati (Kamçatka)',
        'Asia/Karachi' => 'Pakistan Saati (Karaçi)',
        'Asia/Katmandu' => 'Nepal Saati (Katmandu)',
        'Asia/Khandyga' => 'Yakutsk Saati (Handiga)',
        'Asia/Krasnoyarsk' => 'Krasnoyarsk Saati',
        'Asia/Kuala_Lumpur' => 'Malezya Saati (Kuala Lumpur)',
        'Asia/Kuching' => 'Malezya Saati (Kuçing)',
        'Asia/Kuwait' => 'Arabistan Saati (Kuveyt)',
        'Asia/Macau' => 'Çin Saati (Makao)',
        'Asia/Magadan' => 'Magadan Saati',
        'Asia/Makassar' => 'Orta Endonezya Saati (Makassar)',
        'Asia/Manila' => 'Filipinler Saati (Manila)',
        'Asia/Muscat' => 'Körfez Saati (Maskat)',
        'Asia/Nicosia' => 'Doğu Avrupa Saati (Lefkoşa)',
        'Asia/Novokuznetsk' => 'Krasnoyarsk Saati (Novokuznetsk)',
        'Asia/Novosibirsk' => 'Novosibirsk Saati',
        'Asia/Omsk' => 'Omsk Saati',
        'Asia/Oral' => 'Batı Kazakistan Saati (Oral)',
        'Asia/Phnom_Penh' => 'Hindiçin Saati (Phnom Penh)',
        'Asia/Pontianak' => 'Batı Endonezya Saati (Pontianak)',
        'Asia/Pyongyang' => 'Kore Saati (Pyongyang)',
        'Asia/Qatar' => 'Arabistan Saati (Katar)',
        'Asia/Qostanay' => 'Doğu Kazakistan Saati (Kostanay)',
        'Asia/Qyzylorda' => 'Batı Kazakistan Saati (Kızılorda)',
        'Asia/Rangoon' => 'Myanmar Saati (Yangon)',
        'Asia/Riyadh' => 'Arabistan Saati (Riyad)',
        'Asia/Saigon' => 'Hindiçin Saati (Ho Chi Minh Kenti)',
        'Asia/Sakhalin' => 'Sahalin Saati',
        'Asia/Samarkand' => 'Özbekistan Saati (Semerkand)',
        'Asia/Seoul' => 'Kore Saati (Seul)',
        'Asia/Shanghai' => 'Çin Saati (Şanghay)',
        'Asia/Singapore' => 'Singapur Standart Saati',
        'Asia/Srednekolymsk' => 'Magadan Saati (Srednekolymsk)',
        'Asia/Taipei' => 'Taipei Saati',
        'Asia/Tashkent' => 'Özbekistan Saati (Taşkent)',
        'Asia/Tbilisi' => 'Gürcistan Saati (Tiflis)',
        'Asia/Tehran' => 'İran Saati (Tahran)',
        'Asia/Thimphu' => 'Butan Saati (Thimphu)',
        'Asia/Tokyo' => 'Japonya Saati (Tokyo)',
        'Asia/Tomsk' => 'Rusya Saati (Tomsk)',
        'Asia/Ulaanbaatar' => 'Ulan Batur Saati',
        'Asia/Urumqi' => 'Çin Saati (Urumçi)',
        'Asia/Ust-Nera' => 'Vladivostok Saati (Ust-Nera)',
        'Asia/Vientiane' => 'Hindiçin Saati (Vientiane)',
        'Asia/Vladivostok' => 'Vladivostok Saati',
        'Asia/Yakutsk' => 'Yakutsk Saati',
        'Asia/Yekaterinburg' => 'Yekaterinburg Saati',
        'Asia/Yerevan' => 'Ermenistan Saati (Erivan)',
        'Atlantic/Azores' => 'Azorlar Saati (Azor Adaları)',
        'Atlantic/Bermuda' => 'Atlantik Saati (Bermuda)',
        'Atlantic/Canary' => 'Batı Avrupa Saati (Kanarya Adaları)',
        'Atlantic/Cape_Verde' => 'Cape Verde Saati',
        'Atlantic/Faeroe' => 'Batı Avrupa Saati (Faroe)',
        'Atlantic/Madeira' => 'Batı Avrupa Saati (Madeira Adaları)',
        'Atlantic/Reykjavik' => 'Greenwich Ortalama Saati (Reykjavik)',
        'Atlantic/South_Georgia' => 'Güney Georgia Saati',
        'Atlantic/St_Helena' => 'Greenwich Ortalama Saati (St. Helena)',
        'Atlantic/Stanley' => 'Falkland Adaları Saati (Stanley)',
        'Australia/Adelaide' => 'Orta Avustralya Saati (Adelaide)',
        'Australia/Brisbane' => 'Doğu Avustralya Saati (Brisbane)',
        'Australia/Broken_Hill' => 'Orta Avustralya Saati (Broken Hill)',
        'Australia/Currie' => 'Doğu Avustralya Saati (Currie)',
        'Australia/Darwin' => 'Orta Avustralya Saati (Darwin)',
        'Australia/Eucla' => 'İç Batı Avustralya Saati (Eucla)',
        'Australia/Hobart' => 'Doğu Avustralya Saati (Hobart)',
        'Australia/Lindeman' => 'Doğu Avustralya Saati (Lindeman)',
        'Australia/Lord_Howe' => 'Lord Howe Saati',
        'Australia/Melbourne' => 'Doğu Avustralya Saati (Melbourne)',
        'Australia/Perth' => 'Batı Avustralya Saati (Perth)',
        'Australia/Sydney' => 'Doğu Avustralya Saati (Sidney)',
        'CST6CDT' => 'Kuzey Amerika Merkezi Saati',
        'EST5EDT' => 'Kuzey Amerika Doğu Saati',
        'Etc/GMT' => 'Greenwich Ortalama Saati',
        'Etc/UTC' => 'Eş Güdümlü Evrensel Zaman',
        'Europe/Amsterdam' => 'Orta Avrupa Saati (Amsterdam)',
        'Europe/Andorra' => 'Orta Avrupa Saati (Andorra)',
        'Europe/Astrakhan' => 'Moskova Saati (Astrahan)',
        'Europe/Athens' => 'Doğu Avrupa Saati (Atina)',
        'Europe/Belgrade' => 'Orta Avrupa Saati (Belgrad)',
        'Europe/Berlin' => 'Orta Avrupa Saati (Berlin)',
        'Europe/Bratislava' => 'Orta Avrupa Saati (Bratislava)',
        'Europe/Brussels' => 'Orta Avrupa Saati (Brüksel)',
        'Europe/Bucharest' => 'Doğu Avrupa Saati (Bükreş)',
        'Europe/Budapest' => 'Orta Avrupa Saati (Budapeşte)',
        'Europe/Busingen' => 'Orta Avrupa Saati (Büsingen)',
        'Europe/Chisinau' => 'Doğu Avrupa Saati (Kişinev)',
        'Europe/Copenhagen' => 'Orta Avrupa Saati (Kopenhag)',
        'Europe/Dublin' => 'Greenwich Ortalama Saati (Dublin)',
        'Europe/Gibraltar' => 'Orta Avrupa Saati (Cebelitarık)',
        'Europe/Guernsey' => 'Greenwich Ortalama Saati (Guernsey)',
        'Europe/Helsinki' => 'Doğu Avrupa Saati (Helsinki)',
        'Europe/Isle_of_Man' => 'Greenwich Ortalama Saati (Man Adası)',
        'Europe/Istanbul' => 'Türkiye Saati (İstanbul)',
        'Europe/Jersey' => 'Greenwich Ortalama Saati (Jersey)',
        'Europe/Kaliningrad' => 'Doğu Avrupa Saati (Kaliningrad)',
        'Europe/Kiev' => 'Doğu Avrupa Saati (Kiev)',
        'Europe/Kirov' => 'Rusya Saati (Kirov)',
        'Europe/Lisbon' => 'Batı Avrupa Saati (Lizbon)',
        'Europe/Ljubljana' => 'Orta Avrupa Saati (Ljubljana)',
        'Europe/London' => 'Greenwich Ortalama Saati (Londra)',
        'Europe/Luxembourg' => 'Orta Avrupa Saati (Lüksemburg)',
        'Europe/Madrid' => 'Orta Avrupa Saati (Madrid)',
        'Europe/Malta' => 'Orta Avrupa Saati (Malta)',
        'Europe/Mariehamn' => 'Doğu Avrupa Saati (Mariehamn)',
        'Europe/Minsk' => 'Moskova Saati (Minsk)',
        'Europe/Monaco' => 'Orta Avrupa Saati (Monako)',
        'Europe/Moscow' => 'Moskova Saati',
        'Europe/Oslo' => 'Orta Avrupa Saati (Oslo)',
        'Europe/Paris' => 'Orta Avrupa Saati (Paris)',
        'Europe/Podgorica' => 'Orta Avrupa Saati (Podgorica)',
        'Europe/Prague' => 'Orta Avrupa Saati (Prag)',
        'Europe/Riga' => 'Doğu Avrupa Saati (Riga)',
        'Europe/Rome' => 'Orta Avrupa Saati (Roma)',
        'Europe/Samara' => 'Samara Saati',
        'Europe/San_Marino' => 'Orta Avrupa Saati (San Marino)',
        'Europe/Sarajevo' => 'Orta Avrupa Saati (Saraybosna)',
        'Europe/Saratov' => 'Moskova Saati (Saratov)',
        'Europe/Simferopol' => 'Moskova Saati (Simferopol)',
        'Europe/Skopje' => 'Orta Avrupa Saati (Üsküp)',
        'Europe/Sofia' => 'Doğu Avrupa Saati (Sofya)',
        'Europe/Stockholm' => 'Orta Avrupa Saati (Stokholm)',
        'Europe/Tallinn' => 'Doğu Avrupa Saati (Tallinn)',
        'Europe/Tirane' => 'Orta Avrupa Saati (Tiran)',
        'Europe/Ulyanovsk' => 'Moskova Saati (Ulyanovsk)',
        'Europe/Uzhgorod' => 'Doğu Avrupa Saati (Ujgorod)',
        'Europe/Vaduz' => 'Orta Avrupa Saati (Vaduz)',
        'Europe/Vatican' => 'Orta Avrupa Saati (Vatikan)',
        'Europe/Vienna' => 'Orta Avrupa Saati (Viyana)',
        'Europe/Vilnius' => 'Doğu Avrupa Saati (Vilnius)',
        'Europe/Volgograd' => 'Volgograd Saati',
        'Europe/Warsaw' => 'Orta Avrupa Saati (Varşova)',
        'Europe/Zagreb' => 'Orta Avrupa Saati (Zagreb)',
        'Europe/Zaporozhye' => 'Doğu Avrupa Saati (Zaporojye)',
        'Europe/Zurich' => 'Orta Avrupa Saati (Zürih)',
        'Indian/Antananarivo' => 'Doğu Afrika Saati (Antananarivo)',
        'Indian/Chagos' => 'Hint Okyanusu Saati (Chagos)',
        'Indian/Christmas' => 'Christmas Adası Saati',
        'Indian/Cocos' => 'Cocos Adaları Saati',
        'Indian/Comoro' => 'Doğu Afrika Saati (Komor)',
        'Indian/Kerguelen' => 'Fransız Güney ve Antarktika Saati (Kerguelen)',
        'Indian/Mahe' => 'Seyşeller Saati (Mahe)',
        'Indian/Maldives' => 'Maldivler Saati',
        'Indian/Mauritius' => 'Mauritius Saati',
        'Indian/Mayotte' => 'Doğu Afrika Saati (Mayotte)',
        'Indian/Reunion' => 'Reunion Saati',
        'MST7MDT' => 'Kuzey Amerika Dağ Saati',
        'PST8PDT' => 'Kuzey Amerika Pasifik Saati',
        'Pacific/Apia' => 'Apia Saati',
        'Pacific/Auckland' => 'Yeni Zelanda Saati (Auckland)',
        'Pacific/Bougainville' => 'Papua Yeni Gine Saati (Bougainville)',
        'Pacific/Chatham' => 'Chatham Saati',
        'Pacific/Easter' => 'Paskalya Adası Saati',
        'Pacific/Efate' => 'Vanuatu Saati (Efate)',
        'Pacific/Enderbury' => 'Phoenix Adaları Saati (Enderbury)',
        'Pacific/Fakaofo' => 'Tokelau Saati (Fakaofo)',
        'Pacific/Fiji' => 'Fiji Saati',
        'Pacific/Funafuti' => 'Tuvalu Saati (Funafuti)',
        'Pacific/Galapagos' => 'Galapagos Saati',
        'Pacific/Gambier' => 'Gambier Saati',
        'Pacific/Guadalcanal' => 'Solomon Adaları Saati (Guadalcanal)',
        'Pacific/Guam' => 'Chamorro Saati (Guam)',
        'Pacific/Honolulu' => 'Hawaii-Aleut Saati (Honolulu)',
        'Pacific/Johnston' => 'Hawaii-Aleut Saati (Johnston)',
        'Pacific/Kiritimati' => 'Line Adaları Saati (Kiritimati)',
        'Pacific/Kosrae' => 'Kosrae Saati',
        'Pacific/Kwajalein' => 'Marshall Adaları Saati (Kwajalein)',
        'Pacific/Majuro' => 'Marshall Adaları Saati (Majuro)',
        'Pacific/Marquesas' => 'Markiz Adaları Saati',
        'Pacific/Midway' => 'Samoa Saati (Midway)',
        'Pacific/Nauru' => 'Nauru Saati',
        'Pacific/Niue' => 'Niue Saati',
        'Pacific/Norfolk' => 'Norfolk Adası Saati',
        'Pacific/Noumea' => 'Yeni Kaledonya Saati (Noumea)',
        'Pacific/Pago_Pago' => 'Samoa Saati (Pago Pago)',
        'Pacific/Palau' => 'Palau Saati',
        'Pacific/Pitcairn' => 'Pitcairn Saati',
        'Pacific/Ponape' => 'Ponape Saati (Pohnpei)',
        'Pacific/Port_Moresby' => 'Papua Yeni Gine Saati (Port Moresby)',
        'Pacific/Rarotonga' => 'Cook Adaları Saati (Rarotonga)',
        'Pacific/Saipan' => 'Chamorro Saati (Saipan)',
        'Pacific/Tahiti' => 'Tahiti Saati',
        'Pacific/Tarawa' => 'Gilbert Adaları Saati (Tarawa)',
        'Pacific/Tongatapu' => 'Tonga Saati (Tongatapu)',
        'Pacific/Truk' => 'Chuuk Saati',
        'Pacific/Wake' => 'Wake Adası Saati',
        'Pacific/Wallis' => 'Wallis ve Futuna Saati',
    ],
    'Meta' => [
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";