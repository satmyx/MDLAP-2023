1714068343
waR3U4bTeM%3Abfc6eb9c53b5b5ab1556cc437d18c8a9-90069d7b4ed972cbfb3284f00915d607
s:5980:"TzozMzoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlIjoxNDp7czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBkb2NCbG9jayI7TjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGhhc2giO3M6MzI6IjkwMDY5ZDdiNGVkOTcyY2JmYjMyODRmMDA5MTVkNjA3IjtzOjM5OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWUiO3M6MTA6ImFzc2V0cy5waHAiO3M6Mzk6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAcGF0aCI7czo1OToidmVuZG9yL3N5bWZvbnkvZnJhbWV3b3JrLWJ1bmRsZS9SZXNvdXJjZXMvY29uZmlnL2Fzc2V0cy5waHAiO3M6NDE6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAc291cmNlIjtzOjMyNjM6Ijw/cGhwCgovKgogKiBUaGlzIGZpbGUgaXMgcGFydCBvZiB0aGUgU3ltZm9ueSBwYWNrYWdlLgogKgogKiAoYykgRmFiaWVuIFBvdGVuY2llciA8ZmFiaWVuQHN5bWZvbnkuY29tPgogKgogKiBGb3IgdGhlIGZ1bGwgY29weXJpZ2h0IGFuZCBsaWNlbnNlIGluZm9ybWF0aW9uLCBwbGVhc2UgdmlldyB0aGUgTElDRU5TRQogKiBmaWxlIHRoYXQgd2FzIGRpc3RyaWJ1dGVkIHdpdGggdGhpcyBzb3VyY2UgY29kZS4KICovCgpuYW1lc3BhY2UgU3ltZm9ueVxDb21wb25lbnRcRGVwZW5kZW5jeUluamVjdGlvblxMb2FkZXJcQ29uZmlndXJhdG9yOwoKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEFzc2V0XENvbnRleHRcUmVxdWVzdFN0YWNrQ29udGV4dDsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEFzc2V0XFBhY2thZ2U7CnVzZSBTeW1mb255XENvbXBvbmVudFxBc3NldFxQYWNrYWdlczsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEFzc2V0XFBhdGhQYWNrYWdlOwp1c2UgU3ltZm9ueVxDb21wb25lbnRcQXNzZXRcVXJsUGFja2FnZTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEFzc2V0XFZlcnNpb25TdHJhdGVneVxFbXB0eVZlcnNpb25TdHJhdGVneTsKdXNlIFN5bWZvbnlcQ29tcG9uZW50XEFzc2V0XFZlcnNpb25TdHJhdGVneVxKc29uTWFuaWZlc3RWZXJzaW9uU3RyYXRlZ3k7CnVzZSBTeW1mb255XENvbXBvbmVudFxBc3NldFxWZXJzaW9uU3RyYXRlZ3lcUmVtb3RlSnNvbk1hbmlmZXN0VmVyc2lvblN0cmF0ZWd5Owp1c2UgU3ltZm9ueVxDb21wb25lbnRcQXNzZXRcVmVyc2lvblN0cmF0ZWd5XFN0YXRpY1ZlcnNpb25TdHJhdGVneTsKCnJldHVybiBzdGF0aWMgZnVuY3Rpb24gKENvbnRhaW5lckNvbmZpZ3VyYXRvciAkY29udGFpbmVyKSB7CiAgICAkY29udGFpbmVyLT5wYXJhbWV0ZXJzKCkKICAgICAgICAtPnNldCgnYXNzZXQucmVxdWVzdF9jb250ZXh0LmJhc2VfcGF0aCcsIG51bGwpCiAgICAgICAgLT5zZXQoJ2Fzc2V0LnJlcXVlc3RfY29udGV4dC5zZWN1cmUnLCBudWxsKQogICAgOwoKICAgICRjb250YWluZXItPnNlcnZpY2VzKCkKICAgICAgICAtPnNldCgnYXNzZXRzLnBhY2thZ2VzJywgUGFja2FnZXM6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZSgnYXNzZXRzLl9kZWZhdWx0X3BhY2thZ2UnKSwKICAgICAgICAgICAgICAgIHRhZ2dlZF9pdGVyYXRvcignYXNzZXRzLnBhY2thZ2UnLCAncGFja2FnZScpLAogICAgICAgICAgICBdKQoKICAgICAgICAtPmFsaWFzKFBhY2thZ2VzOjpjbGFzcywgJ2Fzc2V0cy5wYWNrYWdlcycpCgogICAgICAgIC0+c2V0KCdhc3NldHMuZW1wdHlfcGFja2FnZScsIFBhY2thZ2U6OmNsYXNzKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgc2VydmljZSgnYXNzZXRzLmVtcHR5X3ZlcnNpb25fc3RyYXRlZ3knKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5hbGlhcygnYXNzZXRzLl9kZWZhdWx0X3BhY2thZ2UnLCAnYXNzZXRzLmVtcHR5X3BhY2thZ2UnKQoKICAgICAgICAtPnNldCgnYXNzZXRzLmNvbnRleHQnLCBSZXF1ZXN0U3RhY2tDb250ZXh0OjpjbGFzcykKICAgICAgICAgICAgLT5hcmdzKFsKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ3JlcXVlc3Rfc3RhY2snKSwKICAgICAgICAgICAgICAgIHBhcmFtKCdhc3NldC5yZXF1ZXN0X2NvbnRleHQuYmFzZV9wYXRoJyksCiAgICAgICAgICAgICAgICBwYXJhbSgnYXNzZXQucmVxdWVzdF9jb250ZXh0LnNlY3VyZScpLAogICAgICAgICAgICBdKQoKICAgICAgICAtPnNldCgnYXNzZXRzLnBhdGhfcGFja2FnZScsIFBhdGhQYWNrYWdlOjpjbGFzcykKICAgICAgICAgICAgLT5hYnN0cmFjdCgpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ2Jhc2UgcGF0aCcpLAogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCd2ZXJzaW9uIHN0cmF0ZWd5JyksCiAgICAgICAgICAgICAgICBzZXJ2aWNlKCdhc3NldHMuY29udGV4dCcpLAogICAgICAgICAgICBdKQoKICAgICAgICAtPnNldCgnYXNzZXRzLnVybF9wYWNrYWdlJywgVXJsUGFja2FnZTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YWJzdHJhY3QoKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCdiYXNlIFVSTHMnKSwKICAgICAgICAgICAgICAgIGFic3RyYWN0X2FyZygndmVyc2lvbiBzdHJhdGVneScpLAogICAgICAgICAgICAgICAgc2VydmljZSgnYXNzZXRzLmNvbnRleHQnKSwKICAgICAgICAgICAgXSkKCiAgICAgICAgLT5zZXQoJ2Fzc2V0cy5zdGF0aWNfdmVyc2lvbl9zdHJhdGVneScsIFN0YXRpY1ZlcnNpb25TdHJhdGVneTo6Y2xhc3MpCiAgICAgICAgICAgIC0+YWJzdHJhY3QoKQogICAgICAgICAgICAtPmFyZ3MoWwogICAgICAgICAgICAgICAgYWJzdHJhY3RfYXJnKCd2ZXJzaW9uJyksCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ2Zvcm1hdCcpLAogICAgICAgICAgICBdKQoKICAgICAgICAtPnNldCgnYXNzZXRzLmVtcHR5X3ZlcnNpb25fc3RyYXRlZ3knLCBFbXB0eVZlcnNpb25TdHJhdGVneTo6Y2xhc3MpCgogICAgICAgIC0+c2V0KCdhc3NldHMuanNvbl9tYW5pZmVzdF92ZXJzaW9uX3N0cmF0ZWd5JywgSnNvbk1hbmlmZXN0VmVyc2lvblN0cmF0ZWd5OjpjbGFzcykKICAgICAgICAgICAgLT5hYnN0cmFjdCgpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ21hbmlmZXN0IHBhdGgnKSwKICAgICAgICAgICAgICAgIHNlcnZpY2UoJ2h0dHBfY2xpZW50JyktPm51bGxPbkludmFsaWQoKSwKICAgICAgICAgICAgICAgIGZhbHNlLAogICAgICAgICAgICBdKQoKICAgICAgICAtPnNldCgnYXNzZXRzLnJlbW90ZV9qc29uX21hbmlmZXN0X3ZlcnNpb25fc3RyYXRlZ3knLCBSZW1vdGVKc29uTWFuaWZlc3RWZXJzaW9uU3RyYXRlZ3k6OmNsYXNzKQogICAgICAgICAgICAtPmFic3RyYWN0KCkKICAgICAgICAgICAgLT5kZXByZWNhdGUoJ3N5bWZvbnkvZnJhbWV3b3JrLWJ1bmRsZScsICc1LjMnLCAnVGhlICIlc2VydmljZV9pZCUiIHNlcnZpY2UgaXMgZGVwcmVjYXRlZCwgdXNlICJhc3NldHMuanNvbl9tYW5pZmVzdF92ZXJzaW9uX3N0cmF0ZWd5IiBpbnN0ZWFkLicpCiAgICAgICAgICAgIC0+YXJncyhbCiAgICAgICAgICAgICAgICBhYnN0cmFjdF9hcmcoJ21hbmlmZXN0IHVybCcpLAogICAgICAgICAgICAgICAgc2VydmljZSgnaHR0cF9jbGllbnQnKSwKICAgICAgICAgICAgXSkKICAgIDsKfTsKIjtzOjQ1OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAG5hbWVzcGFjZXMiO2E6MTp7czo1ODoiXFN5bWZvbnlcQ29tcG9uZW50XERlcGVuZGVuY3lJbmplY3Rpb25cTG9hZGVyXENvbmZpZ3VyYXRvciI7TzozMDoicGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuIjoyOntzOjM3OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAGZxc2VuIjtzOjU4OiJcU3ltZm9ueVxDb21wb25lbnRcRGVwZW5kZW5jeUluamVjdGlvblxMb2FkZXJcQ29uZmlndXJhdG9yIjtzOjM2OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXEZxc2VuAG5hbWUiO3M6MTI6IkNvbmZpZ3VyYXRvciI7fX1zOjQzOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGluY2x1ZGVzIjthOjA6e31zOjQ0OiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAGZ1bmN0aW9ucyI7YTowOnt9czo0NDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBjb25zdGFudHMiO2E6MDp7fXM6NDI6IgBwaHBEb2N1bWVudG9yXFJlZmxlY3Rpb25cUGhwXEZpbGUAY2xhc3NlcyI7YTowOnt9czo0NToiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBpbnRlcmZhY2VzIjthOjA6e31zOjQxOiIAcGhwRG9jdW1lbnRvclxSZWZsZWN0aW9uXFBocFxGaWxlAHRyYWl0cyI7YTowOnt9czo0MDoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBlbnVtcyI7YTowOnt9czo0MzoiAHBocERvY3VtZW50b3JcUmVmbGVjdGlvblxQaHBcRmlsZQBtZXRhZGF0YSI7YTowOnt9fQ==";