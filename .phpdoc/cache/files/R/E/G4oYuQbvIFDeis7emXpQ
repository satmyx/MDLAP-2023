1714068357
waR3U4bTeM%3Adde5b8cda40f74da6614451c9367cf59-e5d778511232fdf3763f05b8cf8331f2
s:37080:"O:33:"phpDocumentor\Reflection\Php\File":14:{s:43:" phpDocumentor\Reflection\Php\File docBlock";N;s:39:" phpDocumentor\Reflection\Php\File hash";s:32:"e5d778511232fdf3763f05b8cf8331f2";s:39:" phpDocumentor\Reflection\Php\File name";s:6:"lv.php";s:39:" phpDocumentor\Reflection\Php\File path";s:51:"vendor/symfony/intl/Resources/data/timezones/lv.php";s:41:" phpDocumentor\Reflection\Php\File source";s:26884:"<?php

return [
    'Names' => [
        'Africa/Abidjan' => 'Abidžana (Griničas laiks)',
        'Africa/Accra' => 'Akra (Griničas laiks)',
        'Africa/Addis_Ababa' => 'Adisabeba (Austrumāfrikas laiks)',
        'Africa/Algiers' => 'Alžīra (Centrāleiropas laiks)',
        'Africa/Asmera' => 'Asmara (Austrumāfrikas laiks)',
        'Africa/Bamako' => 'Bamako (Griničas laiks)',
        'Africa/Bangui' => 'Bangi (Rietumāfrikas laiks)',
        'Africa/Banjul' => 'Bandžula (Griničas laiks)',
        'Africa/Bissau' => 'Bisava (Griničas laiks)',
        'Africa/Blantyre' => 'Blantaira (Centrālāfrikas laiks)',
        'Africa/Brazzaville' => 'Brazavila (Rietumāfrikas laiks)',
        'Africa/Bujumbura' => 'Bužumbura (Centrālāfrikas laiks)',
        'Africa/Cairo' => 'Kaira (Austrumeiropas laiks)',
        'Africa/Casablanca' => 'Kasablanka (Rietumeiropas laiks)',
        'Africa/Ceuta' => 'Seuta (Centrāleiropas laiks)',
        'Africa/Conakry' => 'Konakri (Griničas laiks)',
        'Africa/Dakar' => 'Dakara (Griničas laiks)',
        'Africa/Dar_es_Salaam' => 'Dāresalāma (Austrumāfrikas laiks)',
        'Africa/Djibouti' => 'Džibutija (Austrumāfrikas laiks)',
        'Africa/Douala' => 'Duala (Rietumāfrikas laiks)',
        'Africa/El_Aaiun' => 'Ajūna (Rietumeiropas laiks)',
        'Africa/Freetown' => 'Frītauna (Griničas laiks)',
        'Africa/Gaborone' => 'Gaborone (Centrālāfrikas laiks)',
        'Africa/Harare' => 'Harare (Centrālāfrikas laiks)',
        'Africa/Johannesburg' => 'Johannesburga (Dienvidāfrikas ziemas laiks)',
        'Africa/Juba' => 'Džūba (Centrālāfrikas laiks)',
        'Africa/Kampala' => 'Kampala (Austrumāfrikas laiks)',
        'Africa/Khartoum' => 'Hartūma (Centrālāfrikas laiks)',
        'Africa/Kigali' => 'Kigali (Centrālāfrikas laiks)',
        'Africa/Kinshasa' => 'Kinšasa (Rietumāfrikas laiks)',
        'Africa/Lagos' => 'Lagosa (Rietumāfrikas laiks)',
        'Africa/Libreville' => 'Librevila (Rietumāfrikas laiks)',
        'Africa/Lome' => 'Lome (Griničas laiks)',
        'Africa/Luanda' => 'Luanda (Rietumāfrikas laiks)',
        'Africa/Lubumbashi' => 'Lubumbaši (Centrālāfrikas laiks)',
        'Africa/Lusaka' => 'Lusaka (Centrālāfrikas laiks)',
        'Africa/Malabo' => 'Malabo (Rietumāfrikas laiks)',
        'Africa/Maputo' => 'Maputu (Centrālāfrikas laiks)',
        'Africa/Maseru' => 'Maseru (Dienvidāfrikas ziemas laiks)',
        'Africa/Mbabane' => 'Mbabane (Dienvidāfrikas ziemas laiks)',
        'Africa/Mogadishu' => 'Mogadīšo (Austrumāfrikas laiks)',
        'Africa/Monrovia' => 'Monrovija (Griničas laiks)',
        'Africa/Nairobi' => 'Nairobi (Austrumāfrikas laiks)',
        'Africa/Ndjamena' => 'Ndžamena (Rietumāfrikas laiks)',
        'Africa/Niamey' => 'Niameja (Rietumāfrikas laiks)',
        'Africa/Nouakchott' => 'Nuakšota (Griničas laiks)',
        'Africa/Ouagadougou' => 'Vagadugu (Griničas laiks)',
        'Africa/Porto-Novo' => 'Portonovo (Rietumāfrikas laiks)',
        'Africa/Sao_Tome' => 'Santome (Griničas laiks)',
        'Africa/Tripoli' => 'Tripole (Austrumeiropas laiks)',
        'Africa/Tunis' => 'Tunisa (Centrāleiropas laiks)',
        'Africa/Windhoek' => 'Vindhuka (Centrālāfrikas laiks)',
        'America/Adak' => 'Adaka (Havaju–Aleutu laiks)',
        'America/Anchorage' => 'Ankurāža (Aļaskas laiks)',
        'America/Anguilla' => 'Angilja (Atlantijas laiks)',
        'America/Antigua' => 'Antigva (Atlantijas laiks)',
        'America/Araguaina' => 'Aragvaina (Brazīlijas laiks)',
        'America/Argentina/La_Rioja' => 'Larjoha (Argentīnas laiks)',
        'America/Argentina/Rio_Gallegos' => 'Riogaljegosa (Argentīnas laiks)',
        'America/Argentina/Salta' => 'Salta (Argentīnas laiks)',
        'America/Argentina/San_Juan' => 'Sanhuana (Argentīnas laiks)',
        'America/Argentina/San_Luis' => 'Sanluisa (Argentīnas laiks)',
        'America/Argentina/Tucuman' => 'Tukumana (Argentīnas laiks)',
        'America/Argentina/Ushuaia' => 'Ušuaja (Argentīnas laiks)',
        'America/Aruba' => 'Aruba (Atlantijas laiks)',
        'America/Asuncion' => 'Asunsjona (Paragvajas laiks)',
        'America/Bahia' => 'Baija (Brazīlijas laiks)',
        'America/Bahia_Banderas' => 'Bajabanderasa (Centrālais laiks)',
        'America/Barbados' => 'Barbadosa (Atlantijas laiks)',
        'America/Belem' => 'Belena (Brazīlijas laiks)',
        'America/Belize' => 'Beliza (Centrālais laiks)',
        'America/Blanc-Sablon' => 'Blansablona (Atlantijas laiks)',
        'America/Boa_Vista' => 'Boavista (Amazones laiks)',
        'America/Bogota' => 'Bogota (Kolumbijas laiks)',
        'America/Boise' => 'Boisisitija (Kalnu laiks)',
        'America/Buenos_Aires' => 'Buenosairesa (Argentīnas laiks)',
        'America/Cambridge_Bay' => 'Kembridžbeja (Kalnu laiks)',
        'America/Campo_Grande' => 'Kampugrandi (Amazones laiks)',
        'America/Cancun' => 'Kankuna (Austrumu laiks)',
        'America/Caracas' => 'Karakasa (Venecuēlas laiks)',
        'America/Catamarca' => 'Katamarka (Argentīnas laiks)',
        'America/Cayenne' => 'Kajenna (Francijas Gviānas laiks)',
        'America/Cayman' => 'Kaimanu salas (Austrumu laiks)',
        'America/Chicago' => 'Čikāga (Centrālais laiks)',
        'America/Chihuahua' => 'Čivava (Meksikas Klusā okeāna piekrastes laiks)',
        'America/Coral_Harbour' => 'Atikokana (Austrumu laiks)',
        'America/Cordoba' => 'Kordova (Argentīnas laiks)',
        'America/Costa_Rica' => 'Kostarika (Centrālais laiks)',
        'America/Creston' => 'Krestona (Kalnu laiks)',
        'America/Cuiaba' => 'Kujaba (Amazones laiks)',
        'America/Curacao' => 'Kirasao (Atlantijas laiks)',
        'America/Danmarkshavn' => 'Denmārkšavna (Griničas laiks)',
        'America/Dawson' => 'Dousona (Jukonas laiks)',
        'America/Dawson_Creek' => 'Dousonkrīka (Kalnu laiks)',
        'America/Denver' => 'Denvera (Kalnu laiks)',
        'America/Detroit' => 'Detroita (Austrumu laiks)',
        'America/Dominica' => 'Dominika (Atlantijas laiks)',
        'America/Edmonton' => 'Edmontona (Kalnu laiks)',
        'America/Eirunepe' => 'Eirunepe (Laika josla: Brazīlija)',
        'America/El_Salvador' => 'Salvadora (Centrālais laiks)',
        'America/Fort_Nelson' => 'Fortnelsona (Kalnu laiks)',
        'America/Fortaleza' => 'Fortaleza (Brazīlijas laiks)',
        'America/Glace_Bay' => 'Gleisbeja (Atlantijas laiks)',
        'America/Godthab' => 'Nūka (Rietumgrenlandes laiks)',
        'America/Goose_Bay' => 'Gūsbeja (Atlantijas laiks)',
        'America/Grand_Turk' => 'Grandtkērka (Austrumu laiks)',
        'America/Grenada' => 'Grenāda (Atlantijas laiks)',
        'America/Guadeloupe' => 'Gvadelupa (Atlantijas laiks)',
        'America/Guatemala' => 'Gvatemala (Centrālais laiks)',
        'America/Guayaquil' => 'Gvajakila (Ekvadoras laiks)',
        'America/Guyana' => 'Gajānas laiks',
        'America/Halifax' => 'Helifeksa (Atlantijas laiks)',
        'America/Havana' => 'Havana (Kubas laiks)',
        'America/Hermosillo' => 'Ermosiljo (Meksikas Klusā okeāna piekrastes laiks)',
        'America/Indiana/Knox' => 'Noksa, Indiāna (Centrālais laiks)',
        'America/Indiana/Marengo' => 'Marengo, Indiāna (Austrumu laiks)',
        'America/Indiana/Petersburg' => 'Pītersbērga, Indiāna (Austrumu laiks)',
        'America/Indiana/Tell_City' => 'Telsitija, Indiāna (Centrālais laiks)',
        'America/Indiana/Vevay' => 'Vīveja, Indiāna (Austrumu laiks)',
        'America/Indiana/Vincennes' => 'Vinsensa, Indiāna (Austrumu laiks)',
        'America/Indiana/Winamac' => 'Vinamaka, Indiāna (Austrumu laiks)',
        'America/Indianapolis' => 'Indianapolisa (Austrumu laiks)',
        'America/Inuvik' => 'Inuvika (Kalnu laiks)',
        'America/Iqaluit' => 'Ikaluita (Austrumu laiks)',
        'America/Jamaica' => 'Jamaika (Austrumu laiks)',
        'America/Jujuy' => 'Huhuja (Argentīnas laiks)',
        'America/Juneau' => 'Džuno (Aļaskas laiks)',
        'America/Kentucky/Monticello' => 'Montičelo, Kentuki (Austrumu laiks)',
        'America/Kralendijk' => 'Krālendeika (Atlantijas laiks)',
        'America/La_Paz' => 'Lapasa (Bolīvijas laiks)',
        'America/Lima' => 'Lima (Peru laiks)',
        'America/Los_Angeles' => 'Losandželosa (Klusā okeāna laiks)',
        'America/Louisville' => 'Lūivila (Austrumu laiks)',
        'America/Lower_Princes' => 'Louerprinseskvotera (Atlantijas laiks)',
        'America/Maceio' => 'Masejo (Brazīlijas laiks)',
        'America/Managua' => 'Managva (Centrālais laiks)',
        'America/Manaus' => 'Manausa (Amazones laiks)',
        'America/Marigot' => 'Merigota (Atlantijas laiks)',
        'America/Martinique' => 'Martinika (Atlantijas laiks)',
        'America/Matamoros' => 'Matamorosa (Centrālais laiks)',
        'America/Mazatlan' => 'Masatlana (Meksikas Klusā okeāna piekrastes laiks)',
        'America/Mendoza' => 'Mendosa (Argentīnas laiks)',
        'America/Menominee' => 'Menominī (Centrālais laiks)',
        'America/Merida' => 'Merida (Centrālais laiks)',
        'America/Metlakatla' => 'Metlakatla (Aļaskas laiks)',
        'America/Mexico_City' => 'Mehiko (Centrālais laiks)',
        'America/Miquelon' => 'Senpjēras un Mikelonas laiks',
        'America/Moncton' => 'Monktona (Atlantijas laiks)',
        'America/Monterrey' => 'Monterreja (Centrālais laiks)',
        'America/Montevideo' => 'Montevideo (Urugvajas laiks)',
        'America/Montreal' => 'Montreal (Laika josla: Kanāda)',
        'America/Montserrat' => 'Montserrata (Atlantijas laiks)',
        'America/Nassau' => 'Naso (Austrumu laiks)',
        'America/New_York' => 'Ņujorka (Austrumu laiks)',
        'America/Nipigon' => 'Nipigona (Austrumu laiks)',
        'America/Nome' => 'Noma (Aļaskas laiks)',
        'America/Noronha' => 'Fernandu di Noroņas laiks',
        'America/North_Dakota/Beulah' => 'Bjula, Ziemeļdakota (Centrālais laiks)',
        'America/North_Dakota/Center' => 'Sentera, Ziemeļdakota (Centrālais laiks)',
        'America/North_Dakota/New_Salem' => 'Ņūseilema, Ziemeļdakota (Centrālais laiks)',
        'America/Ojinaga' => 'Ohinaga (Kalnu laiks)',
        'America/Panama' => 'Panama (Austrumu laiks)',
        'America/Pangnirtung' => 'Pannirtuna (Austrumu laiks)',
        'America/Paramaribo' => 'Paramaribo (Surinamas laiks)',
        'America/Phoenix' => 'Fīniksa (Kalnu laiks)',
        'America/Port-au-Prince' => 'Portoprensa (Austrumu laiks)',
        'America/Port_of_Spain' => 'Portofspeina (Atlantijas laiks)',
        'America/Porto_Velho' => 'Portuveļu (Amazones laiks)',
        'America/Puerto_Rico' => 'Puertoriko (Atlantijas laiks)',
        'America/Punta_Arenas' => 'Puntaarenasa (Čīles laiks)',
        'America/Rainy_River' => 'Reinirivera (Centrālais laiks)',
        'America/Rankin_Inlet' => 'Rankininleta (Centrālais laiks)',
        'America/Recife' => 'Resifi (Brazīlijas laiks)',
        'America/Regina' => 'Ridžaina (Centrālais laiks)',
        'America/Resolute' => 'Rezolūta (Centrālais laiks)',
        'America/Rio_Branco' => 'Riobranko (Laika josla: Brazīlija)',
        'America/Santa_Isabel' => 'Santaisabela (Ziemeļrietumu Meksikas laiks)',
        'America/Santarem' => 'Santarena (Brazīlijas laiks)',
        'America/Santiago' => 'Santjago (Čīles laiks)',
        'America/Santo_Domingo' => 'Santodomingo (Atlantijas laiks)',
        'America/Sao_Paulo' => 'Sanpaulu (Brazīlijas laiks)',
        'America/Scoresbysund' => 'Itokortormita (Austrumgrenlandes laiks)',
        'America/Sitka' => 'Sitka (Aļaskas laiks)',
        'America/St_Barthelemy' => 'Senbartelmī (Atlantijas laiks)',
        'America/St_Johns' => 'Sentdžonsa (Ņūfaundlendas laiks)',
        'America/St_Kitts' => 'Sentkitsa (Atlantijas laiks)',
        'America/St_Lucia' => 'Sentlūsija (Atlantijas laiks)',
        'America/St_Thomas' => 'Sentomasa (Atlantijas laiks)',
        'America/St_Vincent' => 'Sentvinsenta (Atlantijas laiks)',
        'America/Swift_Current' => 'Sviftkarenta (Centrālais laiks)',
        'America/Tegucigalpa' => 'Tegusigalpa (Centrālais laiks)',
        'America/Thule' => 'Tule (Atlantijas laiks)',
        'America/Thunder_Bay' => 'Tanderbeja (Austrumu laiks)',
        'America/Tijuana' => 'Tihuana (Klusā okeāna laiks)',
        'America/Toronto' => 'Toronto (Austrumu laiks)',
        'America/Tortola' => 'Tortola (Atlantijas laiks)',
        'America/Vancouver' => 'Vankūvera (Klusā okeāna laiks)',
        'America/Whitehorse' => 'Vaithorsa (Jukonas laiks)',
        'America/Winnipeg' => 'Vinipega (Centrālais laiks)',
        'America/Yakutat' => 'Jakutata (Aļaskas laiks)',
        'America/Yellowknife' => 'Jelounaifa (Kalnu laiks)',
        'Antarctica/Casey' => 'Keisi (Laika josla: Antarktika)',
        'Antarctica/Davis' => 'Deivisas laiks',
        'Antarctica/DumontDUrville' => 'Dimondirvilas laiks',
        'Antarctica/Macquarie' => 'Makvori (Austrālijas austrumu laiks)',
        'Antarctica/Mawson' => 'Mosonas laiks',
        'Antarctica/McMurdo' => 'Makmerdo (Jaunzēlandes laiks)',
        'Antarctica/Palmer' => 'Pālmera (Čīles laiks)',
        'Antarctica/Rothera' => 'Roteras laiks',
        'Antarctica/Syowa' => 'Šovas laiks',
        'Antarctica/Troll' => 'Trolla (Griničas laiks)',
        'Antarctica/Vostok' => 'Vostokas laiks',
        'Arctic/Longyearbyen' => 'Longjērbīene (Centrāleiropas laiks)',
        'Asia/Aden' => 'Adena (Arābijas pussalas laiks)',
        'Asia/Almaty' => 'Almati (Austrumkazahstānas laiks)',
        'Asia/Amman' => 'Ammāna (Austrumeiropas laiks)',
        'Asia/Anadyr' => 'Anadiras laiks',
        'Asia/Aqtau' => 'Aktau (Rietumkazahstānas laiks)',
        'Asia/Aqtobe' => 'Aktebe (Rietumkazahstānas laiks)',
        'Asia/Ashgabat' => 'Ašgabata (Turkmenistānas laiks)',
        'Asia/Atyrau' => 'Atirau (Rietumkazahstānas laiks)',
        'Asia/Baghdad' => 'Bagdāde (Arābijas pussalas laiks)',
        'Asia/Bahrain' => 'Bahreina (Arābijas pussalas laiks)',
        'Asia/Baku' => 'Baku (Azerbaidžānas laiks)',
        'Asia/Bangkok' => 'Bangkoka (Indoķīnas laiks)',
        'Asia/Barnaul' => 'Barnaula (Laika josla: Krievija)',
        'Asia/Beirut' => 'Beirūta (Austrumeiropas laiks)',
        'Asia/Bishkek' => 'Biškeka (Kirgizstānas laiks)',
        'Asia/Brunei' => 'Brunejas Darusalamas laiks',
        'Asia/Calcutta' => 'Kalkāta (Indijas ziemas laiks)',
        'Asia/Chita' => 'Čita (Jakutskas laiks)',
        'Asia/Choibalsan' => 'Čoibalsana (Ulanbatoras laiks)',
        'Asia/Colombo' => 'Kolombo (Indijas ziemas laiks)',
        'Asia/Damascus' => 'Damaska (Austrumeiropas laiks)',
        'Asia/Dhaka' => 'Daka (Bangladešas laiks)',
        'Asia/Dili' => 'Dili (Austrumtimoras laiks)',
        'Asia/Dubai' => 'Dubaija (Persijas līča laiks)',
        'Asia/Dushanbe' => 'Dušanbe (Tadžikistānas laiks)',
        'Asia/Famagusta' => 'Famagusta (Austrumeiropas laiks)',
        'Asia/Gaza' => 'Gaza (Austrumeiropas laiks)',
        'Asia/Hebron' => 'Hebrona (Austrumeiropas laiks)',
        'Asia/Hong_Kong' => 'Honkongas laiks',
        'Asia/Hovd' => 'Hovdas laiks',
        'Asia/Irkutsk' => 'Irkutskas laiks',
        'Asia/Jakarta' => 'Džakarta (Rietumindonēzijas laiks)',
        'Asia/Jayapura' => 'Džajapura (Austrumindonēzijas laiks)',
        'Asia/Jerusalem' => 'Jeruzaleme (Izraēlas laiks)',
        'Asia/Kabul' => 'Kabula (Afganistānas laiks)',
        'Asia/Kamchatka' => 'Kamčatka (Petropavlovskas-Kamčatskas laiks)',
        'Asia/Karachi' => 'Karāči (Pakistānas laiks)',
        'Asia/Katmandu' => 'Katmandu (Nepālas laiks)',
        'Asia/Khandyga' => 'Handiga (Jakutskas laiks)',
        'Asia/Krasnoyarsk' => 'Krasnojarskas laiks',
        'Asia/Kuala_Lumpur' => 'Kualalumpura (Malaizijas laiks)',
        'Asia/Kuching' => 'Kučina (Malaizijas laiks)',
        'Asia/Kuwait' => 'Kuveita (Arābijas pussalas laiks)',
        'Asia/Macau' => 'Makao (Ķīnas laiks)',
        'Asia/Magadan' => 'Magadanas laiks',
        'Asia/Makassar' => 'Makasara (Centrālindonēzijas laiks)',
        'Asia/Manila' => 'Manila (Filipīnu laiks)',
        'Asia/Muscat' => 'Maskata (Persijas līča laiks)',
        'Asia/Nicosia' => 'Nikosija (Austrumeiropas laiks)',
        'Asia/Novokuznetsk' => 'Novokuzņecka (Krasnojarskas laiks)',
        'Asia/Novosibirsk' => 'Novosibirskas laiks',
        'Asia/Omsk' => 'Omskas laiks',
        'Asia/Oral' => 'Orala (Rietumkazahstānas laiks)',
        'Asia/Phnom_Penh' => 'Pnompeņa (Indoķīnas laiks)',
        'Asia/Pontianak' => 'Pontianaka (Rietumindonēzijas laiks)',
        'Asia/Pyongyang' => 'Phenjana (Korejas laiks)',
        'Asia/Qatar' => 'Katara (Arābijas pussalas laiks)',
        'Asia/Qostanay' => 'Kostanaja (Austrumkazahstānas laiks)',
        'Asia/Qyzylorda' => 'Kizilorda (Rietumkazahstānas laiks)',
        'Asia/Rangoon' => 'Ranguna (Mjanmas laiks)',
        'Asia/Riyadh' => 'Rijāda (Arābijas pussalas laiks)',
        'Asia/Saigon' => 'Hošimina (Indoķīnas laiks)',
        'Asia/Sakhalin' => 'Sahalīnas laiks',
        'Asia/Samarkand' => 'Samarkanda (Uzbekistānas laiks)',
        'Asia/Seoul' => 'Seula (Korejas laiks)',
        'Asia/Shanghai' => 'Šanhaja (Ķīnas laiks)',
        'Asia/Singapore' => 'Singapūras laiks',
        'Asia/Srednekolymsk' => 'Sredņekolimska (Magadanas laiks)',
        'Asia/Taipei' => 'Taibei laiks',
        'Asia/Tashkent' => 'Taškenta (Uzbekistānas laiks)',
        'Asia/Tbilisi' => 'Tbilisi (Gruzijas laiks)',
        'Asia/Tehran' => 'Teherāna (Irānas laiks)',
        'Asia/Thimphu' => 'Thimphu (Butānas laiks)',
        'Asia/Tokyo' => 'Tokija (Japānas laiks)',
        'Asia/Tomsk' => 'Tomska (Laika josla: Krievija)',
        'Asia/Ulaanbaatar' => 'Ulanbatoras laiks',
        'Asia/Urumqi' => 'Urumči (Laika josla: Ķīna)',
        'Asia/Ust-Nera' => 'Ustjņera (Vladivostokas laiks)',
        'Asia/Vientiane' => 'Vjenčana (Indoķīnas laiks)',
        'Asia/Vladivostok' => 'Vladivostokas laiks',
        'Asia/Yakutsk' => 'Jakutskas laiks',
        'Asia/Yekaterinburg' => 'Jekaterinburgas laiks',
        'Asia/Yerevan' => 'Erevāna (Armēnijas laiks)',
        'Atlantic/Azores' => 'Azoru salas (Azoru salu laiks)',
        'Atlantic/Bermuda' => 'Bermuda (Atlantijas laiks)',
        'Atlantic/Canary' => 'Kanāriju salas (Rietumeiropas laiks)',
        'Atlantic/Cape_Verde' => 'Kaboverdes laiks',
        'Atlantic/Faeroe' => 'Fēru salas (Rietumeiropas laiks)',
        'Atlantic/Madeira' => 'Madeira (Rietumeiropas laiks)',
        'Atlantic/Reykjavik' => 'Reikjavika (Griničas laiks)',
        'Atlantic/South_Georgia' => 'Dienviddžordžijas laiks',
        'Atlantic/St_Helena' => 'Sv.Helēnas sala (Griničas laiks)',
        'Atlantic/Stanley' => 'Stenli (Folklenda (Malvinu) salu laiks)',
        'Australia/Adelaide' => 'Adelaida (Austrālijas centrālais laiks)',
        'Australia/Brisbane' => 'Brisbena (Austrālijas austrumu laiks)',
        'Australia/Broken_Hill' => 'Brokenhila (Austrālijas centrālais laiks)',
        'Australia/Currie' => 'Kari (Austrālijas austrumu laiks)',
        'Australia/Darwin' => 'Dārvina (Austrālijas centrālais laiks)',
        'Australia/Eucla' => 'Jukla (Austrālijas centrālais rietumu laiks)',
        'Australia/Hobart' => 'Hobārta (Austrālijas austrumu laiks)',
        'Australia/Lindeman' => 'Lindemana (Austrālijas austrumu laiks)',
        'Australia/Lord_Howe' => 'Lordhava (Lorda Hava salas laiks)',
        'Australia/Melbourne' => 'Melburna (Austrālijas austrumu laiks)',
        'Australia/Perth' => 'Pērta (Austrālijas rietumu laiks)',
        'Australia/Sydney' => 'Sidneja (Austrālijas austrumu laiks)',
        'CST6CDT' => 'Centrālais laiks',
        'EST5EDT' => 'Austrumu laiks',
        'Etc/GMT' => 'Griničas laiks',
        'Etc/UTC' => 'Universālais koordinētais laiks',
        'Europe/Amsterdam' => 'Amsterdama (Centrāleiropas laiks)',
        'Europe/Andorra' => 'Andora (Centrāleiropas laiks)',
        'Europe/Astrakhan' => 'Astrahaņa (Maskavas laiks)',
        'Europe/Athens' => 'Atēnas (Austrumeiropas laiks)',
        'Europe/Belgrade' => 'Belgrada (Centrāleiropas laiks)',
        'Europe/Berlin' => 'Berlīne (Centrāleiropas laiks)',
        'Europe/Bratislava' => 'Bratislava (Centrāleiropas laiks)',
        'Europe/Brussels' => 'Brisele (Centrāleiropas laiks)',
        'Europe/Bucharest' => 'Bukareste (Austrumeiropas laiks)',
        'Europe/Budapest' => 'Budapešta (Centrāleiropas laiks)',
        'Europe/Busingen' => 'Bīzingene (Centrāleiropas laiks)',
        'Europe/Chisinau' => 'Kišiņeva (Austrumeiropas laiks)',
        'Europe/Copenhagen' => 'Kopenhāgena (Centrāleiropas laiks)',
        'Europe/Dublin' => 'Dublina (Griničas laiks)',
        'Europe/Gibraltar' => 'Gibraltārs (Centrāleiropas laiks)',
        'Europe/Guernsey' => 'Gērnsija (Griničas laiks)',
        'Europe/Helsinki' => 'Helsinki (Austrumeiropas laiks)',
        'Europe/Isle_of_Man' => 'Menas sala (Griničas laiks)',
        'Europe/Istanbul' => 'Stambula (Laika josla: Turcija)',
        'Europe/Jersey' => 'Džērsija (Griničas laiks)',
        'Europe/Kaliningrad' => 'Kaļiņingrada (Austrumeiropas laiks)',
        'Europe/Kiev' => 'Kijeva (Austrumeiropas laiks)',
        'Europe/Kirov' => 'Kirova (Laika josla: Krievija)',
        'Europe/Lisbon' => 'Lisabona (Rietumeiropas laiks)',
        'Europe/Ljubljana' => 'Ļubļana (Centrāleiropas laiks)',
        'Europe/London' => 'Londona (Griničas laiks)',
        'Europe/Luxembourg' => 'Luksemburga (Centrāleiropas laiks)',
        'Europe/Madrid' => 'Madride (Centrāleiropas laiks)',
        'Europe/Malta' => 'Malta (Centrāleiropas laiks)',
        'Europe/Mariehamn' => 'Mariehamna (Austrumeiropas laiks)',
        'Europe/Minsk' => 'Minska (Maskavas laiks)',
        'Europe/Monaco' => 'Monako (Centrāleiropas laiks)',
        'Europe/Moscow' => 'Maskavas laiks',
        'Europe/Oslo' => 'Oslo (Centrāleiropas laiks)',
        'Europe/Paris' => 'Parīze (Centrāleiropas laiks)',
        'Europe/Podgorica' => 'Podgorica (Centrāleiropas laiks)',
        'Europe/Prague' => 'Prāga (Centrāleiropas laiks)',
        'Europe/Riga' => 'Rīga (Austrumeiropas laiks)',
        'Europe/Rome' => 'Roma (Centrāleiropas laiks)',
        'Europe/Samara' => 'Samaras laiks',
        'Europe/San_Marino' => 'Sanmarīno (Centrāleiropas laiks)',
        'Europe/Sarajevo' => 'Sarajeva (Centrāleiropas laiks)',
        'Europe/Saratov' => 'Saratova (Maskavas laiks)',
        'Europe/Simferopol' => 'Simferopole (Maskavas laiks)',
        'Europe/Skopje' => 'Skopje (Centrāleiropas laiks)',
        'Europe/Sofia' => 'Sofija (Austrumeiropas laiks)',
        'Europe/Stockholm' => 'Stokholma (Centrāleiropas laiks)',
        'Europe/Tallinn' => 'Tallina (Austrumeiropas laiks)',
        'Europe/Tirane' => 'Tirāna (Centrāleiropas laiks)',
        'Europe/Ulyanovsk' => 'Uļjanovska (Maskavas laiks)',
        'Europe/Uzhgorod' => 'Užhoroda (Austrumeiropas laiks)',
        'Europe/Vaduz' => 'Vaduca (Centrāleiropas laiks)',
        'Europe/Vatican' => 'Vatikāns (Centrāleiropas laiks)',
        'Europe/Vienna' => 'Vīne (Centrāleiropas laiks)',
        'Europe/Vilnius' => 'Viļņa (Austrumeiropas laiks)',
        'Europe/Volgograd' => 'Volgogradas laiks',
        'Europe/Warsaw' => 'Varšava (Centrāleiropas laiks)',
        'Europe/Zagreb' => 'Zagreba (Centrāleiropas laiks)',
        'Europe/Zaporozhye' => 'Zaporožje (Austrumeiropas laiks)',
        'Europe/Zurich' => 'Cīrihe (Centrāleiropas laiks)',
        'Indian/Antananarivo' => 'Antananarivu (Austrumāfrikas laiks)',
        'Indian/Chagos' => 'Čagosu arhipelāgs (Indijas okeāna laiks)',
        'Indian/Christmas' => 'Ziemsvētku salas laiks',
        'Indian/Cocos' => 'Kokosu (Kīlinga) sala (Kokosu (Kīlinga) salu laiks)',
        'Indian/Comoro' => 'Komoras (Austrumāfrikas laiks)',
        'Indian/Kerguelen' => 'Kergelēna sala (Francijas Dienvidjūru un Antarktikas teritorijas laiks)',
        'Indian/Mahe' => 'Mae (Seišeļu salu laiks)',
        'Indian/Maldives' => 'Maldīvijas laiks',
        'Indian/Mauritius' => 'Maurīcijas laiks',
        'Indian/Mayotte' => 'Majota (Austrumāfrikas laiks)',
        'Indian/Reunion' => 'Reinjonas laiks',
        'MST7MDT' => 'Kalnu laiks',
        'PST8PDT' => 'Klusā okeāna laiks',
        'Pacific/Apia' => 'Apijas laiks',
        'Pacific/Auckland' => 'Oklenda (Jaunzēlandes laiks)',
        'Pacific/Bougainville' => 'Bugenvila sala (Papua-Jaungvinejas laiks)',
        'Pacific/Chatham' => 'Četemas laiks',
        'Pacific/Easter' => 'Lieldienu salas laiks',
        'Pacific/Efate' => 'Efate (Vanuatu laiks)',
        'Pacific/Enderbury' => 'Enderberija (Fēniksa salu laiks)',
        'Pacific/Fakaofo' => 'Fakaofo (Tokelau laiks)',
        'Pacific/Fiji' => 'Fidži laiks',
        'Pacific/Funafuti' => 'Funafuti (Tuvalu laiks)',
        'Pacific/Galapagos' => 'Galapagu salas (Galapagu laiks)',
        'Pacific/Gambier' => 'Gambjē salas (Gambjē salu laiks)',
        'Pacific/Guadalcanal' => 'Gvadalkanala (Zālamana salu laiks)',
        'Pacific/Guam' => 'Guama (Čamorra ziemas laiks)',
        'Pacific/Honolulu' => 'Honolulu (Havaju–Aleutu laiks)',
        'Pacific/Johnston' => 'Džonstona atols (Havaju–Aleutu laiks)',
        'Pacific/Kiritimati' => 'Kirisimasi (Lainas salu laiks)',
        'Pacific/Kosrae' => 'Kosraja (Kosrae laiks)',
        'Pacific/Kwajalein' => 'Kvadžaleina (Māršala salu laiks)',
        'Pacific/Majuro' => 'Madžuro (Māršala salu laiks)',
        'Pacific/Marquesas' => 'Marķīza salas (Marķīza salu laiks)',
        'Pacific/Midway' => 'Midvejs (Samoa laiks)',
        'Pacific/Nauru' => 'Nauru laiks',
        'Pacific/Niue' => 'Niues laiks',
        'Pacific/Norfolk' => 'Norfolkas salas laiks',
        'Pacific/Noumea' => 'Numea (Jaunkaledonijas laiks)',
        'Pacific/Pago_Pago' => 'Pagopago (Samoa laiks)',
        'Pacific/Palau' => 'Palau laiks',
        'Pacific/Pitcairn' => 'Pitkērnas laiks',
        'Pacific/Ponape' => 'Ponpeja (Ponapē laiks)',
        'Pacific/Port_Moresby' => 'Portmorsbi (Papua-Jaungvinejas laiks)',
        'Pacific/Rarotonga' => 'Rarotonga (Kuka salu laiks)',
        'Pacific/Saipan' => 'Saipana (Čamorra ziemas laiks)',
        'Pacific/Tahiti' => 'Taiti laiks',
        'Pacific/Tarawa' => 'Tarava (Gilberta salu laiks)',
        'Pacific/Tongatapu' => 'Tongatapu (Tongas laiks)',
        'Pacific/Truk' => 'Čūkas laiks',
        'Pacific/Wake' => 'Veika salas laiks',
        'Pacific/Wallis' => 'Volisas un Futunas laiks',
    ],
    'Meta' => [
    ],
];
";s:45:" phpDocumentor\Reflection\Php\File namespaces";a:0:{}s:43:" phpDocumentor\Reflection\Php\File includes";a:0:{}s:44:" phpDocumentor\Reflection\Php\File functions";a:0:{}s:44:" phpDocumentor\Reflection\Php\File constants";a:0:{}s:42:" phpDocumentor\Reflection\Php\File classes";a:0:{}s:45:" phpDocumentor\Reflection\Php\File interfaces";a:0:{}s:41:" phpDocumentor\Reflection\Php\File traits";a:0:{}s:40:" phpDocumentor\Reflection\Php\File enums";a:0:{}s:43:" phpDocumentor\Reflection\Php\File metadata";a:0:{}}";